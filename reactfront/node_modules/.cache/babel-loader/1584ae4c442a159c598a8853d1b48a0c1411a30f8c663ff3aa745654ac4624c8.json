{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\ShowProducts.jsx\",\n  _s = $RefreshSig$();\n// // import React,{useEffect,useState} from 'react'\n// // // import axios from 'axios'\n// // // import {Link} from 'react-router-dom'\n// // import { Link, useNavigate } from 'react-router-dom';\n\n// // import ProductDetail from './ProductDetail';\n\n// // const endpoint = 'http://localhost:8000/api'\n// // const ShowProducts = () => {\n\n// //   const [searchTerm, setSearchTerm] = useState('');\n\n// //   const navigate = useNavigate();\n\n// //   const redirectToDetail = (productId) => {\n// //     navigate(`/product/${productId}`);\n// //   };\n\n// // const [products , setProducts ] = useState([])\n// // const [currentPage, setCurrentPage] = useState(1);\n// // const [totalPages, setTotalPages] = useState(1);\n// // const [productIdToDelete, setProductIdToDelete] = useState(null); // Nuevo estado para almacenar el ID del producto a eliminar\n// //   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false); // Nuevo estado para controlar la apertura del modal\n\n// // useEffect(()=>{\n\n// //     getAllProducts(currentPage)\n// // },[currentPage])\n\n// // const getAllProducts = async (page) => {\n\n// //       const response = await fetch(\n// //         `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`\n// //       );\n\n// //       const data = await response.json();\n// //       const filteredProducts = data.data.filter((product) =>\n// //         product.description.toLowerCase().includes(searchTerm.toLowerCase())\n// //       );\n// //       setProducts(filteredProducts);\n// //       setTotalPages(data.last_page);\n// //       setCurrentPage(data.current_page);    \n// //       console.log('searchTerm:', searchTerm);\n// // console.log('filteredProducts:', filteredProducts);\n\n// //   };\n\n// //   // const handlePageChange = async (newPage) => {\n// //   //   setCurrentPage(newPage);\n// //   //   const response = await fetch(\n// //   //     `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${newPage}`\n// //   //   );\n// //   //   const data = await response.json();\n// //   //   const filteredProducts = data.data.filter((product) =>\n// //   //     product.description.toLowerCase().includes(searchTerm.toLowerCase())\n// //   //   );\n\n// //   //   setProducts(filteredProducts);\n\n// //   // };\n// //   const handlePageChange = (newPage) => {\n// //     setCurrentPage(newPage);\n// //   };\n\n// //   // const handleSearch = () => {\n// //   //   getAllProducts(currentPage);\n// //   // };\n// //   const handleSearch = () => {\n// //     // Al realizar una nueva búsqueda, establecer la página actual en 1\n// //     setCurrentPage(1);\n// //     getAllProducts(1);\n// //   }\n// // const deleteProduct = async (id) => {\n// //       const response = await fetch(`${endpoint}/product/${id}`, {\n// //         method: 'DELETE',\n// //       });\n\n// //       // if (!response.ok) {\n// //       //   console.error(`HTTP error! Status: ${response.status}`);\n// //       //   return;\n// //       // }\n// //       if (response.ok) {\n// //         setIsDeleteModalOpen(false);\n// //         // Puedes realizar alguna acción después de eliminar el producto, por ejemplo, volver a cargar la lista de productos\n// //         getAllProducts(currentPage);\n// //       }\n\n// //       // Puedes realizar alguna acción después de eliminar el producto, por ejemplo, volver a cargar la lista de productos\n// //       getAllProducts();\n\n// //   };\n\n// //   const openDeleteModal = (id) => {\n// //     setProductIdToDelete(id);\n// //     setIsDeleteModalOpen(true);\n// //   };\n// //   const closeDeleteModal = () => {\n// //     setProductIdToDelete(null);\n// //     setIsDeleteModalOpen(false);\n// //   };\n\n// //   return (\n// //     <div>\n// //        <input\n// //           type=\"text\"\n// //           placeholder=\"Search products...\"\n// //           value={searchTerm}\n// //           onChange={(e) => setSearchTerm(e.target.value)}\n// //         />\n// //         <button onClick={handleSearch}>Search</button>\n\n// //     <div>\n// //       <div className='d-grid gap-2'>\n// //         <Link to='/create' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\n// //           Create Product\n// //         </Link>\n// //       </div>\n\n// //       <div className='d-grid gap-2'>\n// //         <Link to='/categories' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\n// //           Categories\n// //         </Link>\n// //       </div>\n\n// //       <table className='table table-striped'>\n// //         <thead>\n// //           <tr>\n// //           {/* <th scope=\"col\">Category</th> */}\n// //             <th scope=\"col\">Description</th>\n// //             <th scope=\"col\">Price</th>\n// //             <th scope=\"col\">Stock</th>\n// //             <th scope=\"col\">Action</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {products.map(product => (\n// //             <tr key={product.id}>\n\n// //               <td>{product.description}</td>\n// //               <td>{product.price}</td>\n// //               <td>{product.stock}</td>\n// //               {/* <td>{product.category ? product.category.name : 'N/A'}</td>  */}\n\n// //               <td>\n// //                 <Link to={`/edit/${product.id}`} className='btn btn-info'>\n// //                   Edit\n// //                 </Link>\n// //                 {/* <button onClick={() => deleteProduct(product.id)} className='btn btn-danger'>\n// //                   Delete\n// //                 </button> */}\n// //                 <button onClick={() => openDeleteModal(product.id)} className=\"btn btn-danger\">\n// //                     Delete\n// //                   </button>\n// //                 <button onClick={() => redirectToDetail(product.id)} className='btn btn-primary'>\n// //                   View Details\n// //                 </button>\n// //               </td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //       <div className='d-flex justify-content-center mt-4'>\n// //         <nav>\n// //           <ul className='pagination'>\n// //             {Array.from({ length: totalPages }, (_, index) => (\n// //               <li\n// //                 key={index + 1}\n// //                 className={`page-item ${index + 1 === currentPage ? 'active' : ''}`}\n// //               >\n// //                 <button\n// //                   className='page-link'\n// //                   onClick={() => handlePageChange(index + 1)}\n// //                 >\n// //                   {index + 1}\n// //                 </button>\n// //               </li>\n// //             ))}\n// //           </ul>\n// //         </nav>\n// //       </div>\n// //     </div>\n// //   </div>\n\n// //   )\n// // }\n\n// // export default ShowProducts\n\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const endpoint = 'http://localhost:8000/api';\n\n// const ShowProducts = () => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [products, setProducts] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n//   const [productIdToDelete, setProductIdToDelete] = useState(null);\n//   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     getAllProducts(currentPage);\n//   }, [currentPage]);\n\n//   const getAllProducts = async (page) => {\n//     const response = await fetch(\n//       `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`\n//     );\n//     const data = await response.json();\n//     const filteredProducts = data.data.filter((product) =>\n//       product.description.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setProducts(filteredProducts);\n//     setTotalPages(data.last_page);\n//     setCurrentPage(data.current_page);\n//   };\n\n//   const handlePageChange = (newPage) => {\n//     setCurrentPage(newPage);\n//   };\n\n//   const handleSearch = () => {\n//     setCurrentPage(1);\n//     getAllProducts(1);\n//   };\n\n//   const deleteProduct = async () => {\n//     try {\n//       if (productIdToDelete) {\n//         console.log('Deleting product with ID:', productIdToDelete);\n\n//         const response = await fetch(`${endpoint}/product/${productIdToDelete}`, {\n//           method: 'DELETE',\n//         });\n\n//         if (response.ok) {\n//           console.log('Product deleted successfully!');\n//           setIsDeleteModalOpen(false);\n//           getAllProducts(currentPage);\n//         } else {\n//           console.error('Failed to delete product. HTTP error:', response.status);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error deleting product:', error);\n//     }\n//   };\n\n//   const openDeleteModal = (id) => {\n//     console.log('openDeleteModal called with ID:', id);\n//     setProductIdToDelete(id);\n//     setIsDeleteModalOpen(true);\n//   };\n\n//   const closeDeleteModal = () => {\n//     setProductIdToDelete(null);\n//     setIsDeleteModalOpen(false);\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search products...\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//       />\n//       <button onClick={handleSearch}>Search</button>\n\n//       <div>\n//         <div className=\"d-grid gap-2\">\n//           <Link to=\"/create\" className=\"btn btn-success btn-lg mt-2 mb-2 text-white\">\n//             Create Product\n//           </Link>\n//         </div>\n\n//         <table className=\"table table-striped\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Description</th>\n//               <th scope=\"col\">Price</th>\n//               <th scope=\"col\">Stock</th>\n//               <th scope=\"col\">Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {products.map((product) => (\n//               <tr key={product.id}>\n//                 <td>{product.description}</td>\n//                 <td>{product.price}</td>\n//                 <td>{product.stock}</td>\n//                 <td>\n//                   <Link to={`/edit/${product.id}`} className=\"btn btn-info\">\n//                     Edit\n//                   </Link>\n//                   <button onClick={() => openDeleteModal(product.id)} className=\"btn btn-danger\">\n//   Delete\n// </button>\n\n//                   <button onClick={() => navigate(`/product/${product.id}`)} className=\"btn btn-primary\">\n//                     View Details\n//                   </button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         <div className=\"d-flex justify-content-center mt-4\">\n//           <nav>\n//             <ul className=\"pagination\">\n//               {Array.from({ length: totalPages }, (_, index) => (\n//                 <li\n//                   key={index + 1}\n//                   className={`page-item ${index + 1 === currentPage ? 'active' : ''}`}\n//                 >\n//                   <button className=\"page-link\" onClick={() => handlePageChange(index + 1)}>\n//                     {index + 1}\n//                   </button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </nav>\n//         </div>\n//       </div>\n\n//       Modal para confirmar la eliminación\n//       {isDeleteModalOpen && (\n//         // <div className=\"modal\">\n//         <div className=\"modal\" style={{ display: 'block', background: 'white' }}>\n\n//               {console.log(\"isDeleteModalOpen is true:\", isDeleteModalOpen)}\n\n//           <div className=\"modal-content\">\n//             <p>\n//               Are you sure you want to delete the product with ID {productIdToDelete}?\n//             </p>\n//             <button onClick={deleteProduct} className=\"btn btn-danger\">\n//               Yes, Delete\n//             </button>\n//             <button onClick={closeDeleteModal} className=\"btn btn-secondary\">\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ShowProducts;\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api';\nconst ShowProducts = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [products, setProducts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [productIdToDelete, setProductIdToDelete] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    getAllProducts(currentPage);\n  }, [currentPage]);\n  const getAllProducts = async page => {\n    const response = await fetch(`${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`);\n    const data = await response.json();\n    const filteredProducts = data.data.filter(product => product.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setProducts(filteredProducts);\n    setTotalPages(data.last_page);\n    setCurrentPage(data.current_page);\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const handleSearch = () => {\n    setCurrentPage(1);\n    getAllProducts(1);\n  };\n  const deleteProduct = async () => {\n    try {\n      if (productIdToDelete) {\n        console.log('Deleting product with ID:', productIdToDelete);\n        const response = await fetch(`${endpoint}/product/${productIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          console.log('Product deleted successfully!');\n          setIsDeleteModalOpen(false);\n\n          // Actualiza la lista de productos después de la eliminación\n          const updatedProducts = products.filter(product => product.id !== productIdToDelete);\n          setProducts(updatedProducts);\n        } else {\n          console.error('Failed to delete product. HTTP error:', response.status);\n        }\n      }\n    } catch (error) {\n      console.error('Error deleting product:', error);\n    }\n  };\n  const openDeleteModal = id => {\n    console.log('openDeleteModal called with ID:', id);\n    setProductIdToDelete(id);\n    setIsDeleteModalOpen(true);\n  };\n  const closeDeleteModal = () => {\n    setProductIdToDelete(null);\n    setIsDeleteModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search products...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create\",\n          className: \"btn btn-success btn-lg mt-2 mb-2 text-white\",\n          children: \"Create Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/edit/${product.id}`,\n                className: \"btn btn-info\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openDeleteModal(product.id),\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate(`/product/${product.id}`),\n                className: \"btn btn-primary\",\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, product.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination\",\n            children: Array.from({\n              length: totalPages\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${index + 1 === currentPage ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"page-link\",\n                onClick: () => handlePageChange(index + 1),\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this)\n            }, index + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: 'block',\n        background: 'white'\n      },\n      children: [console.log(\"isDeleteModalOpen is true:\", isDeleteModalOpen), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete the product with ID \", productIdToDelete, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteProduct,\n          className: \"btn btn-danger\",\n          children: \"Yes, Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeDeleteModal,\n          className: \"btn btn-secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowProducts, \"b4HnrM+p8z/uENukIYuJmZ3SVI8=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowProducts;\nexport default ShowProducts;\nvar _c;\n$RefreshReg$(_c, \"ShowProducts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","endpoint","ShowProducts","_s","searchTerm","setSearchTerm","products","setProducts","currentPage","setCurrentPage","totalPages","setTotalPages","productIdToDelete","setProductIdToDelete","isDeleteModalOpen","setIsDeleteModalOpen","navigate","getAllProducts","page","response","fetch","data","json","filteredProducts","filter","product","description","toLowerCase","includes","last_page","current_page","handlePageChange","newPage","handleSearch","deleteProduct","console","log","method","ok","updatedProducts","id","error","status","openDeleteModal","closeDeleteModal","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","to","scope","map","price","stock","Array","from","length","_","index","style","display","background","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/ShowProducts.jsx"],"sourcesContent":["// // import React,{useEffect,useState} from 'react'\r\n// // // import axios from 'axios'\r\n// // // import {Link} from 'react-router-dom'\r\n// // import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// // import ProductDetail from './ProductDetail';\r\n\r\n\r\n\r\n// // const endpoint = 'http://localhost:8000/api'\r\n// // const ShowProducts = () => {\r\n\r\n\r\n\r\n// //   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const redirectToDetail = (productId) => {\r\n// //     navigate(`/product/${productId}`);\r\n// //   };\r\n\r\n// // const [products , setProducts ] = useState([])\r\n// // const [currentPage, setCurrentPage] = useState(1);\r\n// // const [totalPages, setTotalPages] = useState(1);\r\n// // const [productIdToDelete, setProductIdToDelete] = useState(null); // Nuevo estado para almacenar el ID del producto a eliminar\r\n// //   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false); // Nuevo estado para controlar la apertura del modal\r\n\r\n// // useEffect(()=>{\r\n\r\n// //     getAllProducts(currentPage)\r\n// // },[currentPage])\r\n\r\n\r\n\r\n\r\n\r\n// // const getAllProducts = async (page) => {\r\n    \r\n    \r\n// //       const response = await fetch(\r\n// //         `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`\r\n// //       );\r\n\r\n  \r\n// //       const data = await response.json();\r\n// //       const filteredProducts = data.data.filter((product) =>\r\n// //         product.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n// //       );\r\n// //       setProducts(filteredProducts);\r\n// //       setTotalPages(data.last_page);\r\n// //       setCurrentPage(data.current_page);    \r\n// //       console.log('searchTerm:', searchTerm);\r\n// // console.log('filteredProducts:', filteredProducts);\r\n   \r\n// //   };\r\n\r\n \r\n\r\n// //   // const handlePageChange = async (newPage) => {\r\n// //   //   setCurrentPage(newPage);\r\n// //   //   const response = await fetch(\r\n// //   //     `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${newPage}`\r\n// //   //   );\r\n// //   //   const data = await response.json();\r\n// //   //   const filteredProducts = data.data.filter((product) =>\r\n// //   //     product.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n// //   //   );\r\n  \r\n// //   //   setProducts(filteredProducts);\r\n    \r\n// //   // };\r\n// //   const handlePageChange = (newPage) => {\r\n// //     setCurrentPage(newPage);\r\n// //   };\r\n\r\n// //   // const handleSearch = () => {\r\n// //   //   getAllProducts(currentPage);\r\n// //   // };\r\n// //   const handleSearch = () => {\r\n// //     // Al realizar una nueva búsqueda, establecer la página actual en 1\r\n// //     setCurrentPage(1);\r\n// //     getAllProducts(1);\r\n// //   }\r\n// // const deleteProduct = async (id) => {\r\n// //       const response = await fetch(`${endpoint}/product/${id}`, {\r\n// //         method: 'DELETE',\r\n// //       });\r\n  \r\n// //       // if (!response.ok) {\r\n// //       //   console.error(`HTTP error! Status: ${response.status}`);\r\n// //       //   return;\r\n// //       // }\r\n// //       if (response.ok) {\r\n// //         setIsDeleteModalOpen(false);\r\n// //         // Puedes realizar alguna acción después de eliminar el producto, por ejemplo, volver a cargar la lista de productos\r\n// //         getAllProducts(currentPage);\r\n// //       }\r\n  \r\n// //       // Puedes realizar alguna acción después de eliminar el producto, por ejemplo, volver a cargar la lista de productos\r\n// //       getAllProducts();\r\n   \r\n// //   };\r\n  \r\n// //   const openDeleteModal = (id) => {\r\n// //     setProductIdToDelete(id);\r\n// //     setIsDeleteModalOpen(true);\r\n// //   };\r\n// //   const closeDeleteModal = () => {\r\n// //     setProductIdToDelete(null);\r\n// //     setIsDeleteModalOpen(false);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //        <input\r\n// //           type=\"text\"\r\n// //           placeholder=\"Search products...\"\r\n// //           value={searchTerm}\r\n// //           onChange={(e) => setSearchTerm(e.target.value)}\r\n// //         />\r\n// //         <button onClick={handleSearch}>Search</button>\r\n\r\n\r\n\r\n// //     <div>\r\n// //       <div className='d-grid gap-2'>\r\n// //         <Link to='/create' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\r\n// //           Create Product\r\n// //         </Link>\r\n// //       </div>\r\n\r\n  \r\n// //       <div className='d-grid gap-2'>\r\n// //         <Link to='/categories' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\r\n// //           Categories\r\n// //         </Link>\r\n// //       </div>\r\n     \r\n      \r\n// //       <table className='table table-striped'>\r\n// //         <thead>\r\n// //           <tr>\r\n// //           {/* <th scope=\"col\">Category</th> */}\r\n// //             <th scope=\"col\">Description</th>\r\n// //             <th scope=\"col\">Price</th>\r\n// //             <th scope=\"col\">Stock</th>\r\n// //             <th scope=\"col\">Action</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {products.map(product => (\r\n// //             <tr key={product.id}>\r\n\r\n// //               <td>{product.description}</td>\r\n// //               <td>{product.price}</td>\r\n// //               <td>{product.stock}</td>\r\n// //               {/* <td>{product.category ? product.category.name : 'N/A'}</td>  */}\r\n\r\n// //               <td>\r\n// //                 <Link to={`/edit/${product.id}`} className='btn btn-info'>\r\n// //                   Edit\r\n// //                 </Link>\r\n// //                 {/* <button onClick={() => deleteProduct(product.id)} className='btn btn-danger'>\r\n// //                   Delete\r\n// //                 </button> */}\r\n// //                 <button onClick={() => openDeleteModal(product.id)} className=\"btn btn-danger\">\r\n// //                     Delete\r\n// //                   </button>\r\n// //                 <button onClick={() => redirectToDetail(product.id)} className='btn btn-primary'>\r\n// //                   View Details\r\n// //                 </button>\r\n// //               </td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //       <div className='d-flex justify-content-center mt-4'>\r\n// //         <nav>\r\n// //           <ul className='pagination'>\r\n// //             {Array.from({ length: totalPages }, (_, index) => (\r\n// //               <li\r\n// //                 key={index + 1}\r\n// //                 className={`page-item ${index + 1 === currentPage ? 'active' : ''}`}\r\n// //               >\r\n// //                 <button\r\n// //                   className='page-link'\r\n// //                   onClick={() => handlePageChange(index + 1)}\r\n// //                 >\r\n// //                   {index + 1}\r\n// //                 </button>\r\n// //               </li>\r\n// //             ))}\r\n// //           </ul>\r\n// //         </nav>\r\n// //       </div>\r\n// //     </div>\r\n// //   </div>\r\n\r\n// //   )\r\n// // }\r\n\r\n// // export default ShowProducts\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n\r\n// const endpoint = 'http://localhost:8000/api';\r\n\r\n// const ShowProducts = () => {\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [products, setProducts] = useState([]);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n//   const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n//   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     getAllProducts(currentPage);\r\n//   }, [currentPage]);\r\n\r\n//   const getAllProducts = async (page) => {\r\n//     const response = await fetch(\r\n//       `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`\r\n//     );\r\n//     const data = await response.json();\r\n//     const filteredProducts = data.data.filter((product) =>\r\n//       product.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setProducts(filteredProducts);\r\n//     setTotalPages(data.last_page);\r\n//     setCurrentPage(data.current_page);\r\n//   };\r\n\r\n//   const handlePageChange = (newPage) => {\r\n//     setCurrentPage(newPage);\r\n//   };\r\n\r\n//   const handleSearch = () => {\r\n//     setCurrentPage(1);\r\n//     getAllProducts(1);\r\n//   };\r\n\r\n//   const deleteProduct = async () => {\r\n//     try {\r\n//       if (productIdToDelete) {\r\n//         console.log('Deleting product with ID:', productIdToDelete);\r\n\r\n//         const response = await fetch(`${endpoint}/product/${productIdToDelete}`, {\r\n//           method: 'DELETE',\r\n//         });\r\n\r\n//         if (response.ok) {\r\n//           console.log('Product deleted successfully!');\r\n//           setIsDeleteModalOpen(false);\r\n//           getAllProducts(currentPage);\r\n//         } else {\r\n//           console.error('Failed to delete product. HTTP error:', response.status);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error deleting product:', error);\r\n//     }\r\n//   };\r\n\r\n//   const openDeleteModal = (id) => {\r\n//     console.log('openDeleteModal called with ID:', id);\r\n//     setProductIdToDelete(id);\r\n//     setIsDeleteModalOpen(true);\r\n//   };\r\n\r\n//   const closeDeleteModal = () => {\r\n//     setProductIdToDelete(null);\r\n//     setIsDeleteModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Search products...\"\r\n//         value={searchTerm}\r\n//         onChange={(e) => setSearchTerm(e.target.value)}\r\n//       />\r\n//       <button onClick={handleSearch}>Search</button>\r\n\r\n//       <div>\r\n//         <div className=\"d-grid gap-2\">\r\n//           <Link to=\"/create\" className=\"btn btn-success btn-lg mt-2 mb-2 text-white\">\r\n//             Create Product\r\n//           </Link>\r\n//         </div>\r\n\r\n//         <table className=\"table table-striped\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th scope=\"col\">Description</th>\r\n//               <th scope=\"col\">Price</th>\r\n//               <th scope=\"col\">Stock</th>\r\n//               <th scope=\"col\">Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {products.map((product) => (\r\n//               <tr key={product.id}>\r\n//                 <td>{product.description}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.stock}</td>\r\n//                 <td>\r\n//                   <Link to={`/edit/${product.id}`} className=\"btn btn-info\">\r\n//                     Edit\r\n//                   </Link>\r\n//                   <button onClick={() => openDeleteModal(product.id)} className=\"btn btn-danger\">\r\n//   Delete\r\n// </button>\r\n\r\n\r\n//                   <button onClick={() => navigate(`/product/${product.id}`)} className=\"btn btn-primary\">\r\n//                     View Details\r\n//                   </button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n\r\n//         <div className=\"d-flex justify-content-center mt-4\">\r\n//           <nav>\r\n//             <ul className=\"pagination\">\r\n//               {Array.from({ length: totalPages }, (_, index) => (\r\n//                 <li\r\n//                   key={index + 1}\r\n//                   className={`page-item ${index + 1 === currentPage ? 'active' : ''}`}\r\n//                 >\r\n//                   <button className=\"page-link\" onClick={() => handlePageChange(index + 1)}>\r\n//                     {index + 1}\r\n//                   </button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </nav>\r\n//         </div>\r\n//       </div>\r\n\r\n//       Modal para confirmar la eliminación\r\n//       {isDeleteModalOpen && (\r\n//         // <div className=\"modal\">\r\n//         <div className=\"modal\" style={{ display: 'block', background: 'white' }}>\r\n\r\n//               {console.log(\"isDeleteModalOpen is true:\", isDeleteModalOpen)}\r\n\r\n//           <div className=\"modal-content\">\r\n//             <p>\r\n//               Are you sure you want to delete the product with ID {productIdToDelete}?\r\n//             </p>\r\n//             <button onClick={deleteProduct} className=\"btn btn-danger\">\r\n//               Yes, Delete\r\n//             </button>\r\n//             <button onClick={closeDeleteModal} className=\"btn btn-secondary\">\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowProducts;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst endpoint = 'http://localhost:8000/api';\r\n\r\nconst ShowProducts = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getAllProducts(currentPage);\r\n  }, [currentPage]);\r\n\r\n  const getAllProducts = async (page) => {\r\n    const response = await fetch(\r\n      `${endpoint}/products?per_page=10&order_by=id&order_direction=asc&page=${page}`\r\n    );\r\n    const data = await response.json();\r\n    const filteredProducts = data.data.filter((product) =>\r\n      product.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setProducts(filteredProducts);\r\n    setTotalPages(data.last_page);\r\n    setCurrentPage(data.current_page);\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    getAllProducts(1);\r\n  };\r\n\r\n  const deleteProduct = async () => {\r\n    try {\r\n      if (productIdToDelete) {\r\n        console.log('Deleting product with ID:', productIdToDelete);\r\n\r\n        const response = await fetch(`${endpoint}/product/${productIdToDelete}`, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (response.ok) {\r\n          console.log('Product deleted successfully!');\r\n          setIsDeleteModalOpen(false);\r\n\r\n          // Actualiza la lista de productos después de la eliminación\r\n          const updatedProducts = products.filter(product => product.id !== productIdToDelete);\r\n          setProducts(updatedProducts);\r\n        } else {\r\n          console.error('Failed to delete product. HTTP error:', response.status);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n    }\r\n  };\r\n\r\n  const openDeleteModal = (id) => {\r\n    console.log('openDeleteModal called with ID:', id);\r\n    setProductIdToDelete(id);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const closeDeleteModal = () => {\r\n    setProductIdToDelete(null);\r\n    setIsDeleteModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search products...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      <div>\r\n        <div className=\"d-grid gap-2\">\r\n          <Link to=\"/create\" className=\"btn btn-success btn-lg mt-2 mb-2 text-white\">\r\n            Create Product\r\n          </Link>\r\n        </div>\r\n\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\">Price</th>\r\n              <th scope=\"col\">Stock</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>{product.description}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.stock}</td>\r\n                <td>\r\n                  <Link to={`/edit/${product.id}`} className=\"btn btn-info\">\r\n                    Edit\r\n                  </Link>\r\n                  <button onClick={() => openDeleteModal(product.id)} className=\"btn btn-danger\">\r\n                    Delete\r\n                  </button>\r\n                  <button onClick={() => navigate(`/product/${product.id}`)} className=\"btn btn-primary\">\r\n                    View Details\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"d-flex justify-content-center mt-4\">\r\n          <nav>\r\n            <ul className=\"pagination\">\r\n              {Array.from({ length: totalPages }, (_, index) => (\r\n                <li\r\n                  key={index + 1}\r\n                  className={`page-item ${index + 1 === currentPage ? 'active' : ''}`}\r\n                >\r\n                  <button className=\"page-link\" onClick={() => handlePageChange(index + 1)}>\r\n                    {index + 1}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal para confirmar la eliminación */}\r\n      {isDeleteModalOpen && (\r\n        <div className=\"modal\" style={{ display: 'block', background: 'white' }}>\r\n          {console.log(\"isDeleteModalOpen is true:\", isDeleteModalOpen)}\r\n          <div className=\"modal-content\">\r\n            <p>\r\n              Are you sure you want to delete the product with ID {productIdToDelete}?\r\n            </p>\r\n            <button onClick={deleteProduct} className=\"btn btn-danger\">\r\n              Yes, Delete\r\n            </button>\r\n            <button onClick={closeDeleteModal} className=\"btn btn-secondary\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowProducts;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAIA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAMA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;A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"},"metadata":{},"sourceType":"module","externalDependencies":[]}