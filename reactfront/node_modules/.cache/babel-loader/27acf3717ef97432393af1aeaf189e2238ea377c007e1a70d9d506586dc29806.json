{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW3\\\\crud\\\\reactfront\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     _token: window.csrfToken,\n//     name: '',\n//     email: '',\n//     password: '',\n//     password_confirmation: '',\n//   });\n\n//   const [formErrors, setFormErrors] = useState({});\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n\n//     // Validar longitud de la contraseña y actualizar errores\n//     if (name === 'password' && value.length < 6) {\n//       setFormErrors({ ...formErrors, password: 'La contraseña debe tener al menos 6 caracteres.' });\n//     } else {\n//       setFormErrors({ ...formErrors, password: '' });\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       // Verificar si hay errores antes de enviar el formulario\n//       if (Object.values(formErrors).some((error) => error)) {\n//         return;\n//       }\n\n//       const response = await fetch('http://localhost:8000/api/register', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': 'Bearer ' + formData._token,\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const data = await response.json().catch((error) => {\n//         console.error('Error al analizar la respuesta JSON:', error);\n//       });\n\n//       console.log(data);\n\n//       if (response.ok) {\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Registro exitoso',\n//           text: 'Tu cuenta ha sido creada con éxito.',\n//         }).then(() => {\n//           // Redirige a la ruta deseada (por ejemplo, /login)\n//           navigate('/');\n//         });\n//       }\n//     } catch (error) {\n//       console.error('Error al enviar la solicitud:', error);\n//     }\n//   };\n\n//   return (\n//     // <div>\n//     //   <h2>Registrarse</h2>\n//     //   <form onSubmit={handleSubmit}>\n//     //     <label>\n//     //       Nombre:\n//     //       <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n//     //     </label>\n//     //     <br />\n//     //     <label>\n//     //       Correo Electrónico:\n//     //       <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n//     //     </label>\n//     //     <br />\n//     //     <label>\n//     //       Contraseña:\n//     //       <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n//     //     </label>\n//     //     {formErrors.password && <p style={{ color: 'red' }}>{formErrors.password}</p>}\n//     //     <br />\n//     //     <label>\n//     //       Confirmar Contraseña:\n//     //       <input\n//     //         type=\"password\"\n//     //         name=\"password_confirmation\"\n//     //         value={formData.password_confirmation}\n//     //         onChange={handleChange}\n//     //       />\n//     //     </label>\n//     //     <br />\n//     //     <button type=\"submit\">Registrarse</button>\n//     //   </form>\n//     // </div>\n//     <div className=\"container mt-5\">\n//     <div className=\"row justify-content-center\">\n//       <div className=\"col-md-6\">\n//         <div className=\"card\">\n//           <div className=\"card-body\">\n//             <h2 className=\"card-title text-center\">Registrarse</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"name\" className=\"form-label\">Nombre:</label>\n//                 <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico:</label>\n//                 <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"password\" className=\"form-label\">Contraseña:</label>\n//                 <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n//                 {formErrors.password && <p className=\"text-danger\">{formErrors.password}</p>}\n//               </div>\n//               <div className=\"mb-3\">\n//                 <label htmlFor=\"password_confirmation\" className=\"form-label\">Confirmar Contraseña:</label>\n//                 <input type=\"password\" className=\"form-control\" id=\"password_confirmation\" name=\"password_confirmation\" value={formData.password_confirmation} onChange={handleChange} />\n//               </div>\n//               <div className=\"text-center\">\n//                 <button type=\"submit\" className=\"btn btn-primary\">Registrarse</button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    _token: window.csrfToken,\n    name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Validar longitud de la contraseña y actualizar errores\n    if (name === 'password' && value.length < 6) {\n      setFormErrors({\n        ...formErrors,\n        password: 'La contraseña debe tener al menos 6 caracteres.'\n      });\n    } else if (name === 'email') {\n      // Validar formato de correo electrónico\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const isValidEmail = emailRegex.test(value);\n      setFormErrors({\n        ...formErrors,\n        email: isValidEmail ? '' : 'Ingrese un correo electrónico válido.'\n      });\n    } else {\n      setFormErrors({\n        ...formErrors,\n        [name]: ''\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Verificar si hay errores antes de enviar el formulario\n      if (Object.values(formErrors).some(error => error)) {\n        return;\n      }\n      const response = await fetch('http://localhost:8000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + formData._token\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json().catch(error => {\n        console.error('Error al analizar la respuesta JSON:', error);\n      });\n      console.log(data);\n      if (response.ok) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Registro exitoso',\n          text: 'Tu cuenta ha sido creada con éxito.'\n        }).then(() => {\n          // Redirige a la ruta deseada (por ejemplo, /login)\n          navigate('/');\n        });\n      }\n    } catch (error) {\n      console.error('Error al enviar la solicitud:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-center\",\n              children: \"Registrarse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  className: \"form-label\",\n                  children: \"Nombre:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"name\",\n                  name: \"name\",\n                  value: formData.name,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"form-label\",\n                  children: \"Correo Electr\\xF3nico:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  name: \"email\",\n                  value: formData.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: formErrors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label\",\n                  children: \"Contrase\\xF1a:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: formErrors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password_confirmation\",\n                  className: \"form-label\",\n                  children: \"Confirmar Contrase\\xF1a:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password_confirmation\",\n                  name: \"password_confirmation\",\n                  value: formData.password_confirmation,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Registrarse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"vLd28ajHnIRwhcpf3K4WNcghISY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","_token","window","csrfToken","name","email","password","password_confirmation","formErrors","setFormErrors","handleChange","e","value","target","length","emailRegex","isValidEmail","test","handleSubmit","preventDefault","Object","values","some","error","response","fetch","method","headers","body","JSON","stringify","data","json","catch","console","log","ok","Swal","fire","icon","title","text","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW3/crud/reactfront/src/components/Register.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     _token: window.csrfToken,\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//     password_confirmation: '',\r\n//   });\r\n\r\n//   const [formErrors, setFormErrors] = useState({});\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n\r\n//     // Validar longitud de la contraseña y actualizar errores\r\n//     if (name === 'password' && value.length < 6) {\r\n//       setFormErrors({ ...formErrors, password: 'La contraseña debe tener al menos 6 caracteres.' });\r\n//     } else {\r\n//       setFormErrors({ ...formErrors, password: '' });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       // Verificar si hay errores antes de enviar el formulario\r\n//       if (Object.values(formErrors).some((error) => error)) {\r\n//         return;\r\n//       }\r\n\r\n//       const response = await fetch('http://localhost:8000/api/register', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': 'Bearer ' + formData._token,\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const data = await response.json().catch((error) => {\r\n//         console.error('Error al analizar la respuesta JSON:', error);\r\n//       });\r\n\r\n//       console.log(data);\r\n\r\n//       if (response.ok) {\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Registro exitoso',\r\n//           text: 'Tu cuenta ha sido creada con éxito.',\r\n//         }).then(() => {\r\n//           // Redirige a la ruta deseada (por ejemplo, /login)\r\n//           navigate('/');\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error al enviar la solicitud:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     // <div>\r\n//     //   <h2>Registrarse</h2>\r\n//     //   <form onSubmit={handleSubmit}>\r\n//     //     <label>\r\n//     //       Nombre:\r\n//     //       <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n//     //     </label>\r\n//     //     <br />\r\n//     //     <label>\r\n//     //       Correo Electrónico:\r\n//     //       <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n//     //     </label>\r\n//     //     <br />\r\n//     //     <label>\r\n//     //       Contraseña:\r\n//     //       <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n//     //     </label>\r\n//     //     {formErrors.password && <p style={{ color: 'red' }}>{formErrors.password}</p>}\r\n//     //     <br />\r\n//     //     <label>\r\n//     //       Confirmar Contraseña:\r\n//     //       <input\r\n//     //         type=\"password\"\r\n//     //         name=\"password_confirmation\"\r\n//     //         value={formData.password_confirmation}\r\n//     //         onChange={handleChange}\r\n//     //       />\r\n//     //     </label>\r\n//     //     <br />\r\n//     //     <button type=\"submit\">Registrarse</button>\r\n//     //   </form>\r\n//     // </div>\r\n//     <div className=\"container mt-5\">\r\n//     <div className=\"row justify-content-center\">\r\n//       <div className=\"col-md-6\">\r\n//         <div className=\"card\">\r\n//           <div className=\"card-body\">\r\n//             <h2 className=\"card-title text-center\">Registrarse</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"name\" className=\"form-label\">Nombre:</label>\r\n//                 <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico:</label>\r\n//                 <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"password\" className=\"form-label\">Contraseña:</label>\r\n//                 <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n//                 {formErrors.password && <p className=\"text-danger\">{formErrors.password}</p>}\r\n//               </div>\r\n//               <div className=\"mb-3\">\r\n//                 <label htmlFor=\"password_confirmation\" className=\"form-label\">Confirmar Contraseña:</label>\r\n//                 <input type=\"password\" className=\"form-control\" id=\"password_confirmation\" name=\"password_confirmation\" value={formData.password_confirmation} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"text-center\">\r\n//                 <button type=\"submit\" className=\"btn btn-primary\">Registrarse</button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    _token: window.csrfToken,\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password_confirmation: '',\r\n  });\r\n\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n\r\n    // Validar longitud de la contraseña y actualizar errores\r\n    if (name === 'password' && value.length < 6) {\r\n      setFormErrors({ ...formErrors, password: 'La contraseña debe tener al menos 6 caracteres.' });\r\n    } else if (name === 'email') {\r\n      // Validar formato de correo electrónico\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      const isValidEmail = emailRegex.test(value);\r\n      setFormErrors({ ...formErrors, email: isValidEmail ? '' : 'Ingrese un correo electrónico válido.' });\r\n    } else {\r\n      setFormErrors({ ...formErrors, [name]: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Verificar si hay errores antes de enviar el formulario\r\n      if (Object.values(formErrors).some((error) => error)) {\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:8000/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + formData._token,\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json().catch((error) => {\r\n        console.error('Error al analizar la respuesta JSON:', error);\r\n      });\r\n\r\n      console.log(data);\r\n\r\n      if (response.ok) {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Registro exitoso',\r\n          text: 'Tu cuenta ha sido creada con éxito.',\r\n        }).then(() => {\r\n          // Redirige a la ruta deseada (por ejemplo, /login)\r\n          navigate('/');\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar la solicitud:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"card-title text-center\">Registrarse</h2>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"name\" className=\"form-label\">Nombre:</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico:</label>\r\n                  <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                  {formErrors.email && <p className=\"text-danger\">{formErrors.email}</p>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" className=\"form-label\">Contraseña:</label>\r\n                  <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n                  {formErrors.password && <p className=\"text-danger\">{formErrors.password}</p>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password_confirmation\" className=\"form-label\">Confirmar Contraseña:</label>\r\n                  <input type=\"password\" className=\"form-control\" id=\"password_confirmation\" name=\"password_confirmation\" value={formData.password_confirmation} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">Registrarse</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}