{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\ShowCategories.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from 'react';\n\n// // const ShowCategories = () => {\n// //   const [categories, setCategories] = useState([]);\n\n// //   useEffect(() => {\n// //     const fetchCategories = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\n// //         const data = await response.json();\n// //         setCategories(data);\n// //       } catch (error) {\n// //         console.error('Error fetching categories:', error);\n// //       }\n// //     };\n\n// //     fetchCategories();\n// //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n// //   return (\n// //     <div>\n// //       <h3>Show Categories</h3>\n// //       <ul>\n// //         {categories.map((category) => (\n// //           <li key={category.id}>{category.name}</li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default ShowCategories;\n// import React, { useState, useEffect } from 'react';\n\n// const ShowCategories = () => {\n//   const [categories, setCategories] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h3 className=\"mb-3\">Categories</h3>\n//       <ul className=\"list-group\">\n//         {categories.map((category) => (\n//           <li key={category.id} className=\"list-group-item\">\n//             {category.name}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowCategories;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowCategories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  const deleteCategory = async id => {\n    const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n\n    // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\n    fetchCategories();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid gap-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Category\",\n        className: \"btn btn-success btn-lg mt-2 mb-2 text-white\",\n        children: \"CreateCategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-3\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [category.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteCategory(category.id),\n          className: \"btn btn-danger\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = ShowCategories;\nexport default ShowCategories;\nvar _c;\n$RefreshReg$(_c, \"ShowCategories\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShowCategories","_s","categories","setCategories","fetchCategories","response","fetch","data","json","error","console","deleteCategory","id","method","ok","status","className","children","Link","to","fileName","_jsxFileName","lineNumber","columnNumber","map","category","name","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/ShowCategories.jsx"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n\r\n// // const ShowCategories = () => {\r\n// //   const [categories, setCategories] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchCategories = async () => {\r\n// //       try {\r\n// //         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\r\n// //         const data = await response.json();\r\n// //         setCategories(data);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching categories:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchCategories();\r\n// //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h3>Show Categories</h3>\r\n// //       <ul>\r\n// //         {categories.map((category) => (\r\n// //           <li key={category.id}>{category.name}</li>\r\n// //         ))}\r\n// //       </ul>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ShowCategories;\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const ShowCategories = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n\r\n\r\n\r\n  \r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h3 className=\"mb-3\">Categories</h3>\r\n//       <ul className=\"list-group\">\r\n//         {categories.map((category) => (\r\n//           <li key={category.id} className=\"list-group-item\">\r\n//             {category.name}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowCategories;\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ShowCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/categories');\r\n      const data = await response.json();\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []); \r\n\r\n  const deleteCategory = async (id) => {\r\n    const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`HTTP error! Status: ${response.status}`);\r\n      return;\r\n    }\r\n\r\n    // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\r\n    fetchCategories();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n        <div className='d-grid gap-2'>\r\n        <Link to='/Category' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\r\n          CreateCategory\r\n        </Link>\r\n      </div>\r\n      <h3 className=\"mb-3\">Categories</h3>\r\n      <ul className=\"list-group\">\r\n        {categories.map((category) => (\r\n          <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            {category.name}\r\n            <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCategories;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}