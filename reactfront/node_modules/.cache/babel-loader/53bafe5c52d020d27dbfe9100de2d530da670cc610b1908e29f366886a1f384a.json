{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW\\\\Crud\\\\reactfront\\\\src\\\\components\\\\ProductForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api';\nconst productEndpoint = `${endpoint}/product`;\nconst categoriesEndpoint = `${endpoint}/categories`;\nconst ProductForm = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtenemos el par치metro de la URL para determinar si es una edici칩n\n  const isEditing = !!id; // Si hay un id, estamos editando\n\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [isProductCreated, setIsProductCreated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(categoriesEndpoint);\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n\n    // Si estamos editando, obtenemos los datos del producto actual\n    if (isEditing) {\n      fetchProductDetails();\n    }\n  }, [id, isEditing]);\n  const fetchProductDetails = async () => {\n    try {\n      const response = await fetch(`${productEndpoint}/${id}`);\n      const data = await response.json();\n      setDescription(data.description);\n      setPrice(data.price);\n      setStock(data.stock);\n      setSelectedCategory(data.category_id.toString()); // Convertimos a cadena para que coincida con el valor del <select>\n    } catch (error) {\n      console.error('Error fetching product details:', error);\n    }\n  };\n  const storeOrUpdateProduct = async e => {\n    e.preventDefault();\n    const method = isEditing ? 'PUT' : 'POST';\n    const url = isEditing ? `${productEndpoint}/${id}` : productEndpoint;\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          description,\n          price,\n          stock,\n          category_id: selectedCategory\n        })\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        return;\n      }\n      setIsProductCreated(true);\n      setTimeout(() => {\n        setIsProductCreated(false);\n        navigate('/');\n      }, 3000);\n    } catch (error) {\n      console.error('Error storing/updating product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isEditing ? 'Edit Product' : 'Create Product'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isProductCreated && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: isEditing ? 'Product updated successfully!' : 'Product created successfully!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: storeOrUpdateProduct,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? 'Update' : 'Create'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductForm, \"KYErFd4Cv+jy3wbIk/zFq+sBmkQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","endpoint","productEndpoint","categoriesEndpoint","ProductForm","_s","id","isEditing","description","setDescription","price","setPrice","stock","setStock","categories","setCategories","selectedCategory","setSelectedCategory","isProductCreated","setIsProductCreated","navigate","fetchCategories","response","fetch","data","json","error","console","fetchProductDetails","category_id","toString","storeOrUpdateProduct","e","preventDefault","method","url","headers","body","JSON","stringify","ok","status","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW/Crud/reactfront/src/components/ProductForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst endpoint = 'http://localhost:8000/api';\r\nconst productEndpoint = `${endpoint}/product`;\r\nconst categoriesEndpoint = `${endpoint}/categories`;\r\n\r\nconst ProductForm = () => {\r\n  const { id } = useParams(); // Obtenemos el par치metro de la URL para determinar si es una edici칩n\r\n  const isEditing = !!id; // Si hay un id, estamos editando\r\n\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [stock, setStock] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [isProductCreated, setIsProductCreated] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch(categoriesEndpoint);\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n\r\n    // Si estamos editando, obtenemos los datos del producto actual\r\n    if (isEditing) {\r\n      fetchProductDetails();\r\n    }\r\n  }, [id, isEditing]);\r\n\r\n  const fetchProductDetails = async () => {\r\n    try {\r\n      const response = await fetch(`${productEndpoint}/${id}`);\r\n      const data = await response.json();\r\n\r\n      setDescription(data.description);\r\n      setPrice(data.price);\r\n      setStock(data.stock);\r\n      setSelectedCategory(data.category_id.toString()); // Convertimos a cadena para que coincida con el valor del <select>\r\n    } catch (error) {\r\n      console.error('Error fetching product details:', error);\r\n    }\r\n  };\r\n\r\n  const storeOrUpdateProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n    const url = isEditing ? `${productEndpoint}/${id}` : productEndpoint;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`HTTP error! Status: ${response.status}`);\r\n        return;\r\n      }\r\n\r\n      setIsProductCreated(true);\r\n\r\n      setTimeout(() => {\r\n        setIsProductCreated(false);\r\n        navigate('/');\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Error storing/updating product:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>{isEditing ? 'Edit Product' : 'Create Product'}</h3>\r\n      {isProductCreated && (\r\n        <p style={{ color: 'green' }}>\r\n          {isEditing ? 'Product updated successfully!' : 'Product created successfully!'}\r\n        </p>\r\n      )}\r\n      <form onSubmit={storeOrUpdateProduct}>\r\n        {/* ... (resto del formulario) */}\r\n        <button type=\"submit\">{isEditing ? 'Update' : 'Create'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}