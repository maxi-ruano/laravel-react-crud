{"ast":null,"code":"// // // // import React, { useState, useEffect } from 'react';\n\n// // // // const ShowCategories = () => {\n// // // //   const [categories, setCategories] = useState([]);\n\n// // // //   useEffect(() => {\n// // // //     const fetchCategories = async () => {\n// // // //       try {\n// // // //         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\n// // // //         const data = await response.json();\n// // // //         setCategories(data);\n// // // //       } catch (error) {\n// // // //         console.error('Error fetching categories:', error);\n// // // //       }\n// // // //     };\n\n// // // //     fetchCategories();\n// // // //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n// // // //   return (\n// // // //     <div>\n// // // //       <h3>Show Categories</h3>\n// // // //       <ul>\n// // // //         {categories.map((category) => (\n// // // //           <li key={category.id}>{category.name}</li>\n// // // //         ))}\n// // // //       </ul>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default ShowCategories;\n// // // import React, { useState, useEffect } from 'react';\n\n// // // const ShowCategories = () => {\n// // //   const [categories, setCategories] = useState([]);\n\n// // //   useEffect(() => {\n// // //     const fetchCategories = async () => {\n// // //       try {\n// // //         const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\n// // //         const data = await response.json();\n// // //         setCategories(data);\n// // //       } catch (error) {\n// // //         console.error('Error fetching categories:', error);\n// // //       }\n// // //     };\n\n// // //     fetchCategories();\n// // //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n// // //   return (\n// // //     <div className=\"container mt-4\">\n// // //       <h3 className=\"mb-3\">Categories</h3>\n// // //       <ul className=\"list-group\">\n// // //         {categories.map((category) => (\n// // //           <li key={category.id} className=\"list-group-item\">\n// // //             {category.name}\n// // //           </li>\n// // //         ))}\n// // //       </ul>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default ShowCategories;\n// // import React, { useState, useEffect } from 'react';\n\n// // import {Link} from 'react-router-dom'\n\n// // const ShowCategories = () => {\n// //   const [categories, setCategories] = useState([]);\n\n// //   const fetchCategories = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:8000/api/categories');\n// //       const data = await response.json();\n// //       setCategories(data);\n// //     } catch (error) {\n// //       console.error('Error fetching categories:', error);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchCategories();\n// //   }, []); \n\n// //   const deleteCategory = async (id) => {\n// //     const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\n// //       method: 'DELETE',\n// //     });\n\n// //     if (!response.ok) {\n// //       console.error(`HTTP error! Status: ${response.status}`);\n// //       return;\n// //     }\n\n// //     fetchCategories();\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-4\">\n// //         <div className='d-grid gap-2'>\n// //         <Link to='/createCategory' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\n// //           CreateCategory\n// //         </Link>\n// //       </div>\n// //       <h3 className=\"mb-3\">Categories</h3>\n// //       <ul className=\"list-group\">\n// //         {categories.map((category) => (\n// //           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n// //             {category.name}\n// //             <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\n// //               Delete\n// //             </button>\n// //           </li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default ShowCategories;\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const ShowCategories = () => {\n//   const [categories, setCategories] = useState([]);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/api/categories');\n//       const data = await response.json();\n//       setCategories(data);\n//     } catch (error) {\n//       console.error('Error fetching categories:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const deleteCategory = async (id) => {\n//     const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\n//       method: 'DELETE',\n//     });\n\n//     if (!response.ok) {\n//       console.error(`HTTP error! Status: ${response.status}`);\n//       return;\n//     }\n\n//     // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\n//     fetchCategories();\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <div className='d-flex justify-content-between align-items-center'>\n//         <h3 className=\"mb-3\">Categories Dashboard</h3>\n//         <Link to='/createCategory' className='btn btn-success btn-lg'>\n//           Create Category\n//         </Link>\n//       </div>\n//       <ul className=\"list-group\">\n//         {categories.map((category) => (\n//           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//             <span>{category.name}</span>\n//             <div>\n//               <Link to={`/editCategory/${category.id}`} className='btn btn-primary me-2'>\n//                 Edit\n//               </Link>\n//               <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\n//                 Delete\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowCategories;\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import CategoryModal from './CategoryModal';\n\n// const ShowCategories = () => {\n//   const [categories, setCategories] = useState([]);\n//   const [categoryIdToDelete, setCategoryIdToDelete] = useState(null);\n//   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n//   const [deleteMessage, setDeleteMessage] = useState('');\n//   const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/api/categories');\n//       const data = await response.json();\n//       setCategories(data);\n//     } catch (error) {\n//       console.error('Error fetching categories:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const deleteCategory = async (id) => {\n//     try {\n//       const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\n//         method: 'DELETE',\n//       });\n\n//       if (response.ok) {\n//         console.log('Category deleted successfully!');\n//         setDeleteMessage('Product deleted successfully!');\n\n//         setIsDeleteModalOpen(false);\n//         fetchCategories();\n//       } else {\n//         console.error('Failed to delete category. HTTP error:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error deleting category:', error);\n//     }\n//   };\n\n//   const openDeleteModal = (id) => {\n//     console.log('openDeleteModal called with ID:', id);\n//     setCategoryIdToDelete(id);\n//     setIsDeleteModalOpen(true);\n//   };\n\n//   const closeDeleteModal = () => {\n//     setCategoryIdToDelete(null);\n//     setIsDeleteModalOpen(false);\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <div className='d-flex justify-content-between align-items-center'>\n//         <h3 className=\"mb-3\">Categories Dashboard</h3>\n//         {deleteMessage && (\n//         <div className=\"alert alert-success mt-3\" role=\"alert\" style={{ color: 'red' }}>\n//         {deleteMessage}\n//         </div>\n//       )}\n//         <Link to='/createCategory' className='btn btn-success btn-lg'>\n//           Create Category\n//         </Link>\n//       </div>\n//       <br></br>\n//       <ul className=\"list-group\">\n//         {categories.map((category) => (\n//           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n//             <span>{category.name}</span>\n//             <div>\n//               <Link to={`/editCategory/${category.id}`} className='btn btn-primary me-2'>\n//                 Edit\n//               </Link>\n//               <button onClick={() => openDeleteModal(category.id)} className='btn btn-danger'>\n//                 Delete\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//       <br></br>\n//       <Link to='/' className='btn btn-success btn-lg'>\n//           Back\n//         </Link>\n//       {/* Modal para confirmar la eliminación */}\n//       {isDeleteModalOpen && (\n//         <div className=\"modal\" style={{ display: 'block', background: 'white' }}>\n//           <div className=\"modal-content\">\n//             <p>\n//               Are you sure you want to delete the category with ID {categoryIdToDelete}?\n//             </p>\n//             <button onClick={() => deleteCategory(categoryIdToDelete)} className=\"btn btn-danger\">\n//               Yes, Delete\n//             </button>\n//             <button onClick={closeDeleteModal} className=\"btn btn-secondary\">\n//               Cancel\n//             </button>\n//           </div>\n//         </div>\n\n//       )}\n\n//   <CategoryModal\n//         isOpen={isCategoryModalOpen} \n//           // onClose={/* ... */}\n//         // onSelectCategory={/* ... */}\n//         fetchCategories={fetchCategories}  \n\n//       />\n//     </div>\n\n//   );\n// };\n\n// export default ShowCategories;","map":{"version":3,"names":[],"sources":["C:/Users/Master PC/Desktop/NEW/Crud/reactfront/src/components/ShowCategories.jsx"],"sourcesContent":["// // // // import React, { useState, useEffect } from 'react';\r\n\r\n// // // // const ShowCategories = () => {\r\n// // // //   const [categories, setCategories] = useState([]);\r\n\r\n// // // //   useEffect(() => {\r\n// // // //     const fetchCategories = async () => {\r\n// // // //       try {\r\n// // // //         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\r\n// // // //         const data = await response.json();\r\n// // // //         setCategories(data);\r\n// // // //       } catch (error) {\r\n// // // //         console.error('Error fetching categories:', error);\r\n// // // //       }\r\n// // // //     };\r\n\r\n// // // //     fetchCategories();\r\n// // // //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n// // // //   return (\r\n// // // //     <div>\r\n// // // //       <h3>Show Categories</h3>\r\n// // // //       <ul>\r\n// // // //         {categories.map((category) => (\r\n// // // //           <li key={category.id}>{category.name}</li>\r\n// // // //         ))}\r\n// // // //       </ul>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default ShowCategories;\r\n// // // import React, { useState, useEffect } from 'react';\r\n\r\n// // // const ShowCategories = () => {\r\n// // //   const [categories, setCategories] = useState([]);\r\n\r\n// // //   useEffect(() => {\r\n// // //     const fetchCategories = async () => {\r\n// // //       try {\r\n// // //         const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\r\n// // //         const data = await response.json();\r\n// // //         setCategories(data);\r\n// // //       } catch (error) {\r\n// // //         console.error('Error fetching categories:', error);\r\n// // //       }\r\n// // //     };\r\n\r\n// // //     fetchCategories();\r\n// // //   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n\r\n\r\n\r\n  \r\n// // //   return (\r\n// // //     <div className=\"container mt-4\">\r\n// // //       <h3 className=\"mb-3\">Categories</h3>\r\n// // //       <ul className=\"list-group\">\r\n// // //         {categories.map((category) => (\r\n// // //           <li key={category.id} className=\"list-group-item\">\r\n// // //             {category.name}\r\n// // //           </li>\r\n// // //         ))}\r\n// // //       </ul>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default ShowCategories;\r\n// // import React, { useState, useEffect } from 'react';\r\n\r\n\r\n// // import {Link} from 'react-router-dom'\r\n\r\n// // const ShowCategories = () => {\r\n// //   const [categories, setCategories] = useState([]);\r\n\r\n// //   const fetchCategories = async () => {\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:8000/api/categories');\r\n// //       const data = await response.json();\r\n// //       setCategories(data);\r\n// //     } catch (error) {\r\n// //       console.error('Error fetching categories:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     fetchCategories();\r\n// //   }, []); \r\n\r\n// //   const deleteCategory = async (id) => {\r\n// //     const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\r\n// //       method: 'DELETE',\r\n// //     });\r\n\r\n// //     if (!response.ok) {\r\n// //       console.error(`HTTP error! Status: ${response.status}`);\r\n// //       return;\r\n// //     }\r\n\r\n// //     fetchCategories();\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-4\">\r\n// //         <div className='d-grid gap-2'>\r\n// //         <Link to='/createCategory' className='btn btn-success btn-lg mt-2 mb-2 text-white'>\r\n// //           CreateCategory\r\n// //         </Link>\r\n// //       </div>\r\n// //       <h3 className=\"mb-3\">Categories</h3>\r\n// //       <ul className=\"list-group\">\r\n// //         {categories.map((category) => (\r\n// //           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n// //             {category.name}\r\n// //             <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\r\n// //               Delete\r\n// //             </button>\r\n// //           </li>\r\n// //         ))}\r\n// //       </ul>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ShowCategories;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const ShowCategories = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n\r\n//   const fetchCategories = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/api/categories');\r\n//       const data = await response.json();\r\n//       setCategories(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching categories:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const deleteCategory = async (id) => {\r\n//     const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\r\n//       method: 'DELETE',\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       console.error(`HTTP error! Status: ${response.status}`);\r\n//       return;\r\n//     }\r\n\r\n//     // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\r\n//     fetchCategories();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <div className='d-flex justify-content-between align-items-center'>\r\n//         <h3 className=\"mb-3\">Categories Dashboard</h3>\r\n//         <Link to='/createCategory' className='btn btn-success btn-lg'>\r\n//           Create Category\r\n//         </Link>\r\n//       </div>\r\n//       <ul className=\"list-group\">\r\n//         {categories.map((category) => (\r\n//           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//             <span>{category.name}</span>\r\n//             <div>\r\n//               <Link to={`/editCategory/${category.id}`} className='btn btn-primary me-2'>\r\n//                 Edit\r\n//               </Link>\r\n//               <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\r\n//                 Delete\r\n//               </button>\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowCategories;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import CategoryModal from './CategoryModal';\r\n\r\n\r\n// const ShowCategories = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [categoryIdToDelete, setCategoryIdToDelete] = useState(null);\r\n//   const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n//   const [deleteMessage, setDeleteMessage] = useState('');\r\n//   const [isCategoryModalOpen, setIsCategoryModalOpen] = useState(false);\r\n\r\n//   const fetchCategories = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/api/categories');\r\n//       const data = await response.json();\r\n//       setCategories(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching categories:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const deleteCategory = async (id) => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:8000/api/categories/${id}`, {\r\n//         method: 'DELETE',\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Category deleted successfully!');\r\n//         setDeleteMessage('Product deleted successfully!');\r\n\r\n//         setIsDeleteModalOpen(false);\r\n//         fetchCategories();\r\n//       } else {\r\n//         console.error('Failed to delete category. HTTP error:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error deleting category:', error);\r\n//     }\r\n//   };\r\n\r\n//   const openDeleteModal = (id) => {\r\n//     console.log('openDeleteModal called with ID:', id);\r\n//     setCategoryIdToDelete(id);\r\n//     setIsDeleteModalOpen(true);\r\n//   };\r\n\r\n//   const closeDeleteModal = () => {\r\n//     setCategoryIdToDelete(null);\r\n//     setIsDeleteModalOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <div className='d-flex justify-content-between align-items-center'>\r\n//         <h3 className=\"mb-3\">Categories Dashboard</h3>\r\n//         {deleteMessage && (\r\n//         <div className=\"alert alert-success mt-3\" role=\"alert\" style={{ color: 'red' }}>\r\n//         {deleteMessage}\r\n//         </div>\r\n//       )}\r\n//         <Link to='/createCategory' className='btn btn-success btn-lg'>\r\n//           Create Category\r\n//         </Link>\r\n//       </div>\r\n//       <br></br>\r\n//       <ul className=\"list-group\">\r\n//         {categories.map((category) => (\r\n//           <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n//             <span>{category.name}</span>\r\n//             <div>\r\n//               <Link to={`/editCategory/${category.id}`} className='btn btn-primary me-2'>\r\n//                 Edit\r\n//               </Link>\r\n//               <button onClick={() => openDeleteModal(category.id)} className='btn btn-danger'>\r\n//                 Delete\r\n//               </button>\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <br></br>\r\n//       <Link to='/' className='btn btn-success btn-lg'>\r\n//           Back\r\n//         </Link>\r\n//       {/* Modal para confirmar la eliminación */}\r\n//       {isDeleteModalOpen && (\r\n//         <div className=\"modal\" style={{ display: 'block', background: 'white' }}>\r\n//           <div className=\"modal-content\">\r\n//             <p>\r\n//               Are you sure you want to delete the category with ID {categoryIdToDelete}?\r\n//             </p>\r\n//             <button onClick={() => deleteCategory(categoryIdToDelete)} className=\"btn btn-danger\">\r\n//               Yes, Delete\r\n//             </button>\r\n//             <button onClick={closeDeleteModal} className=\"btn btn-secondary\">\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n        \r\n//       )}\r\n\r\n//   <CategoryModal\r\n//         isOpen={isCategoryModalOpen} \r\n//           // onClose={/* ... */}\r\n//         // onSelectCategory={/* ... */}\r\n//         fetchCategories={fetchCategories}  \r\n        \r\n//       />\r\n//     </div>\r\n    \r\n//   );\r\n// };\r\n\r\n// export default ShowCategories;\r\n"],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}