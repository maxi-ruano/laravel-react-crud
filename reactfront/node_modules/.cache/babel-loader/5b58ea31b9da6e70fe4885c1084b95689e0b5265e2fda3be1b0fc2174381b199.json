{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\CreateProduct.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api/product';\nconst CreateProduct = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const navigate = useNavigate();\n  const store = async e => {\n    e.preventDefault();\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description,\n        price,\n        stock\n      })\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" CreateProduct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: store,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: stock,\n          onChange: e => setStock(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProduct, \"At8xco0XEYYb3IdEsNN8YG9mpoA=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProduct;\nexport default CreateProduct;\n\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const endpoint = 'http://localhost:8000/api';\n// const productEndpoint = `${endpoint}/product`;\n// const categoriesEndpoint = `${endpoint}/categories`;  // Endpoint para obtener las categorías\n\n// const CreateProduct = () => {\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState(0);\n//   const [stock, setStock] = useState(0);\n//   const [categories, setCategories] = useState([]);  // Estado para almacenar las categorías\n//   const [selectedCategory, setSelectedCategory] = useState('');  // Estado para la categoría seleccionada\n//   const navigate = useNavigate();\n\n//   // Obtener las categorías cuando el componente se monta\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch(categoriesEndpoint);\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n//   const store = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(productEndpoint, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),  // Agregar la categoría seleccionada\n//     });\n\n//     if (!response.ok) {\n//       console.error(`HTTP error! Status: ${response.status}`);\n//       return;\n//     }\n\n//     navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h3>CreateProduct</h3>\n//       <form onSubmit={store}>\n//         <div>\n//           <label>Description</label>\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//         </div>\n//         <div>\n//           <label>Price</label>\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//         </div>\n//         <div>\n//           <label>Stock</label>\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\n//         </div>\n//         {/* Agregar el campo de selección para las categorías */}\n//         <div>\n//           <label>Category</label>\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n//             <option value=\"\">Select a category</option>\n//             {categories.map((category) => (\n//               <option key={category.id} value={category.id}>\n//                 {category.name}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <button type=\"submit\">Crear</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useNavigate","useState","jsxDEV","_jsxDEV","endpoint","CreateProduct","_s","description","setDescription","price","setPrice","stock","setStock","navigate","store","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/CreateProduct.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nconst endpoint ='http://localhost:8000/api/product'\r\n\r\n\r\nconst CreateProduct = () => {\r\n\r\nconst [description , setDescription] = useState('');\r\nconst [price , setPrice] = useState(0);\r\nconst [stock , setStock] = useState(0);\r\nconst navigate = useNavigate()\r\n\r\n\r\nconst store = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ description, price, stock }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        console.error(`HTTP error! Status: ${response.status}`);\r\n        return;\r\n      }\r\n  \r\n      navigate('/');\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n        \r\n        \r\n       <h3> CreateProduct</h3>\r\n        \r\n        <form onSubmit={store}>\r\n            <div>\r\n                <label>Description</label>\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                \r\n            </div>\r\n            <div>\r\n                <label>Price</label>\r\n                <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n                \r\n            </div>\r\n            <div>\r\n                <label>Stock</label>\r\n                <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\r\n                \r\n            </div>\r\n<button type='submit'>Crear</button>\r\n        </form>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default CreateProduct\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const endpoint = 'http://localhost:8000/api';\r\n// const productEndpoint = `${endpoint}/product`;\r\n// const categoriesEndpoint = `${endpoint}/categories`;  // Endpoint para obtener las categorías\r\n\r\n// const CreateProduct = () => {\r\n//   const [description, setDescription] = useState('');\r\n//   const [price, setPrice] = useState(0);\r\n//   const [stock, setStock] = useState(0);\r\n//   const [categories, setCategories] = useState([]);  // Estado para almacenar las categorías\r\n//   const [selectedCategory, setSelectedCategory] = useState('');  // Estado para la categoría seleccionada\r\n//   const navigate = useNavigate();\r\n\r\n//   // Obtener las categorías cuando el componente se monta\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch(categoriesEndpoint);\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n//   const store = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const response = await fetch(productEndpoint, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),  // Agregar la categoría seleccionada\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       console.error(`HTTP error! Status: ${response.status}`);\r\n//       return;\r\n//     }\r\n\r\n//     navigate('/');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>CreateProduct</h3>\r\n//       <form onSubmit={store}>\r\n//         <div>\r\n//           <label>Description</label>\r\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n//         </div>\r\n//         <div>\r\n//           <label>Price</label>\r\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n//         </div>\r\n//         <div>\r\n//           <label>Stock</label>\r\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n//         </div>\r\n//         {/* Agregar el campo de selección para las categorías */}\r\n//         <div>\r\n//           <label>Category</label>\r\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n//             <option value=\"\">Select a category</option>\r\n//             {categories.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n//         <button type=\"submit\">Crear</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}