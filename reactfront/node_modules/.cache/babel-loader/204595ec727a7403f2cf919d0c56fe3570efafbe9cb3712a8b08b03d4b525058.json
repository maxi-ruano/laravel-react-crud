{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW3\\\\crud\\\\reactfront\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\n// // src/components/Navbar.js\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Navbar = () => {\n\n//   return (\n//     <nav>\n//       <ul>\n//         <li><Link to=\"/\">Inicio</Link></li>\n//         <li><Link to=\"/products\">Productos</Link></li>\n\n//         <li><Link to=\"/login\">Login</Link></li>\n//         <li><Link to=\"/register\">Registrarse</Link></li>\n//       </ul>\n//     </nav>\n//   );\n// };\n\n// export default Navbar;\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Aquí puedes realizar una llamada a tu backend para verificar el estado de autenticación\n    // Puedes usar alguna función de tu lógica de autenticación para determinar si el usuario está autenticado\n    const checkAuthentication = async () => {\n      // Lógica para verificar la autenticación (puedes usar fetch, axios u otras bibliotecas)\n      // Ejemplo: const response = await fetch('tu-endpoint-de-verificacion', { method: 'GET' });\n      // Si el usuario está autenticado, actualiza el estado a true\n      // Si no, deja el estado como false\n      setIsLoggedIn( /* Resultado de la verificación */);\n    };\n\n    // Llamada a la función de verificación al montar el componente\n    checkAuthentication();\n  }, []); // Asegúrate de proporcionar un arreglo de dependencias vacío para que useEffect se ejecute solo una vez al montar\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Inicio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/products\",\n          children: \"Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Registrarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","checkAuthentication","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW3/crud/reactfront/src/components/Navbar.jsx"],"sourcesContent":["// // src/components/Navbar.js\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const Navbar = () => {\r\n  \r\n//   return (\r\n//     <nav>\r\n//       <ul>\r\n//         <li><Link to=\"/\">Inicio</Link></li>\r\n//         <li><Link to=\"/products\">Productos</Link></li>\r\n      \r\n//         <li><Link to=\"/login\">Login</Link></li>\r\n//         <li><Link to=\"/register\">Registrarse</Link></li>\r\n//       </ul>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Aquí puedes realizar una llamada a tu backend para verificar el estado de autenticación\r\n    // Puedes usar alguna función de tu lógica de autenticación para determinar si el usuario está autenticado\r\n    const checkAuthentication = async () => {\r\n      // Lógica para verificar la autenticación (puedes usar fetch, axios u otras bibliotecas)\r\n      // Ejemplo: const response = await fetch('tu-endpoint-de-verificacion', { method: 'GET' });\r\n      // Si el usuario está autenticado, actualiza el estado a true\r\n      // Si no, deja el estado como false\r\n      setIsLoggedIn(/* Resultado de la verificación */);\r\n    };\r\n\r\n    // Llamada a la función de verificación al montar el componente\r\n    checkAuthentication();\r\n  }, []); // Asegúrate de proporcionar un arreglo de dependencias vacío para que useEffect se ejecute solo una vez al montar\r\n\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li><Link to=\"/\">Inicio</Link></li>\r\n        {isLoggedIn && <li><Link to=\"/products\">Productos</Link></li>}\r\n        <li><Link to=\"/login\">Login</Link></li>\r\n        <li><Link to=\"/register\">Registrarse</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC;MACA;MACA;MACA;MACAD,aAAa,CAAmC,CAAlC,mCAAmC;IACnD,CAAC;;IAED;IACAC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAM,QAAA,eACEN,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,eAAIN,OAAA,CAACF,IAAI;UAACS,EAAE,EAAC,GAAG;UAAAD,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClCR,UAAU,iBAAIH,OAAA;QAAAM,QAAA,eAAIN,OAAA,CAACF,IAAI;UAACS,EAAE,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7DX,OAAA;QAAAM,QAAA,eAAIN,OAAA,CAACF,IAAI;UAACS,EAAE,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCX,OAAA;QAAAM,QAAA,eAAIN,OAAA,CAACF,IAAI;UAACS,EAAE,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACT,EAAA,CA5BID,MAAM;AAAAW,EAAA,GAANX,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}