{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\CreateProduct.jsx\",\n  _s = $RefreshSig$();\n// // import React from 'react'\n// // import { useNavigate } from 'react-router-dom'\n// // import { useState } from 'react'\n// // const endpoint ='http://localhost:8000/api/product'\n\n// // const CreateProduct = () => {\n\n// // const [description , setDescription] = useState('');\n// // const [price , setPrice] = useState(0);\n// // const [stock , setStock] = useState(0);\n// // const navigate = useNavigate()\n\n// // // const store =(e) =>{\n// // // e.preventDefault()\n// // // await axios.post(endpoint,{description:description,price:price,stock:stock})\n// // // navigate('/')\n// // // }\n\n// // const store = async (e) => {\n// //     e.preventDefault();\n\n// //     const response = await fetch(endpoint, {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ description, price, stock }),\n// //       });\n\n// //       if (!response.ok) {\n// //         console.error(`HTTP error! Status: ${response.status}`);\n// //         return;\n// //       }\n\n// //       // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\n// //       navigate('/');\n// //   };\n\n// //   return (\n// //     <div>\n\n// //        <h3> CreateProduct</h3>\n\n// //         <form onSubmit={store}>\n// //             <div>\n// //                 <label>Description</label>\n// //                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n\n// //             </div>\n// //             <div>\n// //                 <label>Price</label>\n// //                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\n\n// //             </div>\n// //             <div>\n// //                 <label>Stock</label>\n// //                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\n\n// //             </div>\n// // <button type='submit'>Crear</button>\n// //         </form>\n// //         </div>\n// //   )\n// // }\n\n// // export default CreateProduct\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const endpoint = 'http://localhost:8000/api';\n// const productEndpoint = `${endpoint}/product`;\n// const categoryEndpoint = `${endpoint}/category`;\n\n// const CreateProduct = () => {\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState(0);\n//   const [stock, setStock] = useState(0);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const navigate = useNavigate();\n\n//   const store = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(productEndpoint, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\n//     });\n\n//     if (!response.ok) {\n//       console.error(`HTTP error! Status: ${response.status}`);\n//       return;\n//     }\n\n//     // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\n//     navigate('/');\n//   };\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch(categoryEndpoint);\n//         if (!response.ok) {\n//           console.error(`HTTP error! Status: ${response.status}`);\n//           return;\n//         }\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h3>CreateProduct</h3>\n//       <form onSubmit={store}>\n//         <div>\n//           <label>Description</label>\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//         </div>\n//         <div>\n//           <label>Price</label>\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//         </div>\n//         <div>\n//           <label>Stock</label>\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n//             <option value=\"\">Select a category</option>\n//             {categories.map((category) => (\n//               <option key={category.id} value={category.id}>\n//                 {category.name}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <button type=\"submit\">Create</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateProduct;\n// CreateProduct.js\n// CreateProduct.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api/product';\nconst CreateProduct = ({\n  categories\n}) => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [categoryId, setCategoryId] = useState('');\n  const navigate = useNavigate();\n  const store = async e => {\n    e.preventDefault();\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description,\n        price,\n        stock,\n        category_id: categoryId\n      })\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CreateProduct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: store,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: categoryId,\n          onChange: e => setCategoryId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.id,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProduct, \"m49P8zUd4rcU4mjh+uHTO6IChYM=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProduct;\nexport default CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","endpoint","CreateProduct","categories","_s","description","setDescription","price","setPrice","stock","setStock","categoryId","setCategoryId","navigate","store","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","category_id","ok","console","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","map","category","id","name","type","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/CreateProduct.jsx"],"sourcesContent":["// // import React from 'react'\r\n// // import { useNavigate } from 'react-router-dom'\r\n// // import { useState } from 'react'\r\n// // const endpoint ='http://localhost:8000/api/product'\r\n\r\n\r\n// // const CreateProduct = () => {\r\n\r\n// // const [description , setDescription] = useState('');\r\n// // const [price , setPrice] = useState(0);\r\n// // const [stock , setStock] = useState(0);\r\n// // const navigate = useNavigate()\r\n\r\n// // // const store =(e) =>{\r\n// // // e.preventDefault()\r\n// // // await axios.post(endpoint,{description:description,price:price,stock:stock})\r\n// // // navigate('/')\r\n// // // }\r\n\r\n// // const store = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     const response = await fetch(endpoint, {\r\n// //         method: 'POST',\r\n// //         headers: {\r\n// //           'Content-Type': 'application/json',\r\n// //         },\r\n// //         body: JSON.stringify({ description, price, stock }),\r\n// //       });\r\n  \r\n// //       if (!response.ok) {\r\n// //         console.error(`HTTP error! Status: ${response.status}`);\r\n// //         return;\r\n// //       }\r\n  \r\n// //       // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\r\n// //       navigate('/');\r\n// //   };\r\n\r\n\r\n\r\n\r\n\r\n// //   return (\r\n// //     <div>\r\n        \r\n        \r\n        \r\n// //        <h3> CreateProduct</h3>\r\n        \r\n// //         <form onSubmit={store}>\r\n// //             <div>\r\n// //                 <label>Description</label>\r\n// //                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                \r\n// //             </div>\r\n// //             <div>\r\n// //                 <label>Price</label>\r\n// //                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n                \r\n// //             </div>\r\n// //             <div>\r\n// //                 <label>Stock</label>\r\n// //                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\r\n                \r\n// //             </div>\r\n// // <button type='submit'>Crear</button>\r\n// //         </form>\r\n// //         </div>\r\n// //   )\r\n// // }\r\n\r\n// // export default CreateProduct\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const endpoint = 'http://localhost:8000/api';\r\n// const productEndpoint = `${endpoint}/product`;\r\n// const categoryEndpoint = `${endpoint}/category`;\r\n\r\n// const CreateProduct = () => {\r\n//   const [description, setDescription] = useState('');\r\n//   const [price, setPrice] = useState(0);\r\n//   const [stock, setStock] = useState(0);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const store = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const response = await fetch(productEndpoint, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       console.error(`HTTP error! Status: ${response.status}`);\r\n//       return;\r\n//     }\r\n\r\n//     // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\r\n//     navigate('/');\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch(categoryEndpoint);\r\n//         if (!response.ok) {\r\n//           console.error(`HTTP error! Status: ${response.status}`);\r\n//           return;\r\n//         }\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>CreateProduct</h3>\r\n//       <form onSubmit={store}>\r\n//         <div>\r\n//           <label>Description</label>\r\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n//         </div>\r\n//         <div>\r\n//           <label>Price</label>\r\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n//         </div>\r\n//         <div>\r\n//           <label>Stock</label>\r\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n//         </div>\r\n//         <div>\r\n//           <label>Category</label>\r\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n//             <option value=\"\">Select a category</option>\r\n//             {categories.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n//         <button type=\"submit\">Create</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateProduct;\r\n// CreateProduct.js\r\n// CreateProduct.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst endpoint ='http://localhost:8000/api/product';\r\n\r\nconst CreateProduct = ({ categories }) => {\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [stock, setStock] = useState(0);\r\n  const [categoryId, setCategoryId] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const store = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(endpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ description, price, stock, category_id: categoryId }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`HTTP error! Status: ${response.status}`);\r\n      return;\r\n    }\r\n\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>CreateProduct</h3>\r\n      <form onSubmit={store}>\r\n        {/* ... (resto del formulario) */}\r\n        <div>\r\n          <label>Category</label>\r\n          <select value={categoryId} onChange={(e) => setCategoryId(e.target.value)}>\r\n            <option value=\"\">Select a category</option>\r\n            {categories.map(category => (\r\n              <option key={category.id} value={category.id}>{category.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}