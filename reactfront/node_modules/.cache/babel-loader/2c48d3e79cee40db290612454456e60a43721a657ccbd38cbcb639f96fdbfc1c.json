{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW3\\\\crud\\\\reactfront\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n\n  //         const response = await fetch('http://localhost:8000/register', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify(formData),\n  //         });\n\n  //         const data = await response.json();\n\n  //         console.log(data);\n\n  //     } catch (error) {\n  //         console.error('Error al enviar la solicitud:', error);\n  //     }\n  // };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Obtener el token CSRF de la etiqueta meta\n      const token = document.head.querySelector('meta[name=\"csrf-token\"]').content;\n\n      // Enviar la solicitud con el token CSRF\n      const response = await fetch('http://localhost:8000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRF-TOKEN': token\n        },\n        body: JSON.stringify(formData)\n      });\n\n      // Verificar el código de estado de la respuesta\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // Obtener los datos de la respuesta en formato JSON\n      const data = await response.json();\n\n      // Hacer algo con los datos (por ejemplo, imprimir en la consola)\n      console.log(data);\n    } catch (error) {\n      console.error('Error al enviar la solicitud:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Correo Electr\\xF3nico:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirmar Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password_confirmation\",\n          value: formData.password_confirmation,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"LbrP0LHJYTjwRDy/k3pXfjTI+lw=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","password_confirmation","handleChange","e","target","value","console","log","handleSubmit","preventDefault","token","document","head","querySelector","content","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW3/crud/reactfront/src/components/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password_confirmation: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    console.log({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n      \r\n//         const response = await fetch('http://localhost:8000/register', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(formData),\r\n//         });\r\n\r\n//         const data = await response.json();\r\n\r\n//         console.log(data);\r\n\r\n//     } catch (error) {\r\n//         console.error('Error al enviar la solicitud:', error);\r\n//     }\r\n// };\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n      // Obtener el token CSRF de la etiqueta meta\r\n      const token = document.head.querySelector('meta[name=\"csrf-token\"]').content;\r\n\r\n      // Enviar la solicitud con el token CSRF\r\n      const response = await fetch('http://localhost:8000/register', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-CSRF-TOKEN': token,\r\n          },\r\n          body: JSON.stringify(formData),\r\n      });\r\n\r\n      // Verificar el código de estado de la respuesta\r\n      if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      // Obtener los datos de la respuesta en formato JSON\r\n      const data = await response.json();\r\n\r\n      // Hacer algo con los datos (por ejemplo, imprimir en la consola)\r\n      console.log(data);\r\n\r\n  } catch (error) {\r\n      console.error('Error al enviar la solicitud:', error);\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h2>Registrarse</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Nombre:\r\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Correo Electrónico:\r\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Contraseña:\r\n          <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Confirmar Contraseña:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password_confirmation\"\r\n            value={formData.password_confirmation}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Registrarse</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}