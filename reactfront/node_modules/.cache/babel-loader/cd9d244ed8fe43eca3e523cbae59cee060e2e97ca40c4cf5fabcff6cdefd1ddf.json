{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\a\\\\Crud_Laravel_React\\\\reactfront\\\\src\\\\components\\\\CategoryModal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import CreateCategory from './CreateCategory'; \n// import EditCategory from './EditCategory'; \n\n// const CategoryModal = ({ isOpen, onClose, onSelectCategory  }) => {\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategoryId, setSelectedCategoryId] = useState(null);\n//   const [isCreateCategoryOpen, setIsCreateCategoryOpen] = useState(false);\n//   const [isEditCategoryOpen, setIsEditCategoryOpen] = useState(false);\n\n// useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/categories');\n//         const data = await response.json();\n//         setCategories(data);\n\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);\n//   const handleCategorySelect = (categoryId) => {\n\n//     setSelectedCategoryId(categoryId);\n//   };\n\n//   const openCreateCategoryModal = () => {\n//     setIsCreateCategoryOpen(true);\n//   };\n\n//   const closeCreateCategoryModal = () => {\n//     setIsCreateCategoryOpen(false);\n//   };\n\n//   const openEditCategoryModal = () => {\n//     setIsEditCategoryOpen(true);\n//   };\n\n//   const closeEditCategoryModal = () => {\n//     setIsEditCategoryOpen(false);\n//   };\n\n//   const onDeleteCategory = async (categoryId) => {\n//     try {\n//       const result = await Swal.fire({\n//         title: 'Are you sure?',\n//         text: `You won't be able to revert this!`,\n//         icon: 'warning',\n//         showCancelButton: true,\n//         confirmButtonColor: '#d33',\n//         cancelButtonColor: '#3085d6',\n//         confirmButtonText: 'Yes, delete it!',\n//       });\n\n//       if (!result.isConfirmed) {\n//         return; \n//       }\n\n//       const response = await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       let data = {}; \n\n//       try {\n//         data = await response.json();\n//       } catch (jsonError) {\n//         console.error('Error parsing JSON:', jsonError);\n//       }\n\n//       if (response.ok) {\n//         console.log(`Success message from server: ${data.message}`);\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Success!',\n//           text: 'Category deleted successfully!',\n//         });\n//         fetchUpdatedCategories();\n//       } else {\n\n//         console.error(`HTTP error! Status: ${response.status}`);\n//         console.error(`Error message from server: ${data.error}`);\n//         Swal.fire({\n//           icon: 'error',\n//           title: 'Error!',\n//           text: 'Error deleting category. Please try again.',\n//         });\n//       }\n//     } catch (error) {\n\n//       console.error('Error deleting category:', error);\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Error!',\n//         text: 'Error deleting category. Please try again.',\n//       });\n//     }\n//   };\n\n//   const fetchUpdatedCategories = async () => {\n//     try {\n//       const response = await fetch('http://localhost:8000/api/categories');\n//       const data = await response.json();\n//       setCategories(data);\n\n//     } catch (error) {\n//       console.error('Error fetching updated categories:', error);\n//     }\n//   };\n//   return (\n\n// <div className={`modal ${isOpen ? 'show' : ''}`} style={{ display: isOpen ? 'block' : 'none', background: 'rgba(0, 0, 0, 0.5)', position: 'fixed', top: '0', left: '0', width: '100%', height: '100%', zIndex: '9999' }}>\n//       <div className=\"modal-dialog\" style={{ width: '1000px', margin: '30px auto' }}>\n//         <div className=\"modal-content\" style={{ height: '600px',width: '700px', overflowY: 'auto' }}>\n//           <div className=\"modal-header\">\n//             <h5 className=\"modal-title\">Categories</h5>\n//             <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClose}></button>\n//           </div>\n//           <div className=\"modal-body\">\n//             <div className=\"mt-3\">\n//               <button onClick={openCreateCategoryModal} className=\"btn btn-success\">\n//                 Create Category\n//               </button>\n//             </div>\n//             <br />\n//             {isCreateCategoryOpen && <CreateCategory onClose={closeCreateCategoryModal} />}\n//             {isEditCategoryOpen && <EditCategory categoryId={selectedCategoryId} onClose={closeEditCategoryModal} />}\n//             <ul className=\"list-group\">\n//               {categories.map((category) => (\n//                 <li\n//                   key={category.id}\n//                   className={`list-group-item ${selectedCategoryId === category.id ? 'active' : ''}`}\n//                   onClick={() => handleCategorySelect(category.id)}\n//                 >\n//                   <div className=\"d-flex justify-content-between align-items-center\">\n//                     <span>{category.name}</span>\n//                     <div>\n//                       <button onClick={() => openEditCategoryModal(category.id)} className=\"btn btn-primary mx-2\">\n//                         Edit Category\n//                       </button>\n//                       <button onClick={() => onDeleteCategory(category.id)} className=\"btn btn-danger\">\n//                         Delete Category\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//             <button onClick={onClose} className=\"btn btn-secondary mt-3\" style={{ width: '10%', marginLeft: '45%' }}>\n//               Close\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default CategoryModal;\nimport React, { useState, useEffect } from 'react';\nimport CreateCategory from './CreateCategory';\nimport EditCategory from './EditCategory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryModal = ({\n  isOpen,\n  onClose,\n  onSelectCategory,\n  onDeleteCategory\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategoryId, setSelectedCategoryId] = useState(null);\n  const [isCreateCategoryOpen, setIsCreateCategoryOpen] = useState(false);\n  const [isEditCategoryOpen, setIsEditCategoryOpen] = useState(false);\n  const [confirmDeleteCategoryId, setConfirmDeleteCategoryId] = useState(null);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories');\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const handleCategorySelect = categoryId => {\n    setSelectedCategoryId(categoryId);\n  };\n  const openCreateCategoryModal = () => {\n    setIsCreateCategoryOpen(true);\n  };\n  const closeCreateCategoryModal = () => {\n    setIsCreateCategoryOpen(false);\n  };\n  const openEditCategoryModal = () => {\n    setIsEditCategoryOpen(true);\n  };\n  const closeEditCategoryModal = () => {\n    setIsEditCategoryOpen(false);\n  };\n  const confirmDelete = categoryId => {\n    setConfirmDeleteCategoryId(categoryId);\n  };\n  const cancelDelete = () => {\n    setConfirmDeleteCategoryId(null);\n  };\n  const handleDeleteCategory = async categoryId => {\n    try {\n      await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      fetchUpdatedCategories();\n      setConfirmDeleteCategoryId(null);\n    } catch (error) {\n      console.error('Error deleting category:', error);\n    }\n  };\n  const fetchUpdatedCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching updated categories:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${isOpen ? 'show' : ''}`,\n    style: {\n      display: isOpen ? 'block' : 'none',\n      background: 'rgba(0, 0, 0, 0.5)',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      zIndex: '9999'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog\",\n      style: {\n        width: '1000px',\n        margin: '30px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          height: '600px',\n          width: '700px',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"modal-title\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            \"aria-label\": \"Close\",\n            onClick: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: openCreateCategoryModal,\n              className: \"btn btn-success\",\n              children: \"Create Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), isCreateCategoryOpen && /*#__PURE__*/_jsxDEV(CreateCategory, {\n            onClose: closeCreateCategoryModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 38\n          }, this), isEditCategoryOpen && /*#__PURE__*/_jsxDEV(EditCategory, {\n            categoryId: selectedCategoryId,\n            onClose: closeEditCategoryModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group\",\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `list-group-item ${selectedCategoryId === category.id ? 'active' : ''}`,\n              onClick: () => handleCategorySelect(category.id),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => openEditCategoryModal(category.id),\n                    className: \"btn btn-primary mx-2\",\n                    children: \"Edit Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this), confirmDeleteCategoryId === category.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Are you sure?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteCategory(category.id),\n                      className: \"btn btn-danger mx-2\",\n                      children: \"Yes, Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: cancelDelete,\n                      className: \"btn btn-secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => confirmDelete(category.id),\n                    className: \"btn btn-danger\",\n                    children: \"Delete Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"btn btn-secondary mt-3\",\n            style: {\n              width: '10%',\n              marginLeft: '45%'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryModal, \"KnwOVW/STZpSTQ1WXa1gyDP9OwY=\");\n_c = CategoryModal;\nexport default CategoryModal;\nvar _c;\n$RefreshReg$(_c, \"CategoryModal\");","map":{"version":3,"names":["React","useState","useEffect","CreateCategory","EditCategory","jsxDEV","_jsxDEV","Fragment","_Fragment","CategoryModal","isOpen","onClose","onSelectCategory","onDeleteCategory","_s","categories","setCategories","selectedCategoryId","setSelectedCategoryId","isCreateCategoryOpen","setIsCreateCategoryOpen","isEditCategoryOpen","setIsEditCategoryOpen","confirmDeleteCategoryId","setConfirmDeleteCategoryId","fetchCategories","response","fetch","data","json","error","console","handleCategorySelect","categoryId","openCreateCategoryModal","closeCreateCategoryModal","openEditCategoryModal","closeEditCategoryModal","confirmDelete","cancelDelete","handleDeleteCategory","method","headers","fetchUpdatedCategories","className","style","display","background","position","top","left","width","height","zIndex","children","margin","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","category","id","name","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/a/Crud_Laravel_React/reactfront/src/components/CategoryModal.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import CreateCategory from './CreateCategory'; \r\n// import EditCategory from './EditCategory'; \r\n\r\n// const CategoryModal = ({ isOpen, onClose, onSelectCategory  }) => {\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategoryId, setSelectedCategoryId] = useState(null);\r\n//   const [isCreateCategoryOpen, setIsCreateCategoryOpen] = useState(false);\r\n//   const [isEditCategoryOpen, setIsEditCategoryOpen] = useState(false);\r\n\r\n// useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/categories');\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n    \r\n\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);\r\n//   const handleCategorySelect = (categoryId) => {\r\n\r\n//     setSelectedCategoryId(categoryId);\r\n//   };\r\n\r\n//   const openCreateCategoryModal = () => {\r\n//     setIsCreateCategoryOpen(true);\r\n//   };\r\n\r\n//   const closeCreateCategoryModal = () => {\r\n//     setIsCreateCategoryOpen(false);\r\n//   };\r\n\r\n//   const openEditCategoryModal = () => {\r\n//     setIsEditCategoryOpen(true);\r\n//   };\r\n\r\n//   const closeEditCategoryModal = () => {\r\n//     setIsEditCategoryOpen(false);\r\n//   };\r\n  \r\n\r\n\r\n  \r\n  \r\n//   const onDeleteCategory = async (categoryId) => {\r\n//     try {\r\n//       const result = await Swal.fire({\r\n//         title: 'Are you sure?',\r\n//         text: `You won't be able to revert this!`,\r\n//         icon: 'warning',\r\n//         showCancelButton: true,\r\n//         confirmButtonColor: '#d33',\r\n//         cancelButtonColor: '#3085d6',\r\n//         confirmButtonText: 'Yes, delete it!',\r\n//       });\r\n  \r\n//       if (!result.isConfirmed) {\r\n//         return; \r\n//       }\r\n  \r\n//       const response = await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\r\n//         method: 'DELETE',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n  \r\n//       let data = {}; \r\n  \r\n//       try {\r\n//         data = await response.json();\r\n//       } catch (jsonError) {\r\n//         console.error('Error parsing JSON:', jsonError);\r\n//       }\r\n  \r\n//       if (response.ok) {\r\n//         console.log(`Success message from server: ${data.message}`);\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Success!',\r\n//           text: 'Category deleted successfully!',\r\n//         });\r\n//         fetchUpdatedCategories();\r\n//       } else {\r\n       \r\n//         console.error(`HTTP error! Status: ${response.status}`);\r\n//         console.error(`Error message from server: ${data.error}`);\r\n//         Swal.fire({\r\n//           icon: 'error',\r\n//           title: 'Error!',\r\n//           text: 'Error deleting category. Please try again.',\r\n//         });\r\n//       }\r\n//     } catch (error) {\r\n      \r\n//       console.error('Error deleting category:', error);\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Error!',\r\n//         text: 'Error deleting category. Please try again.',\r\n//       });\r\n//     }\r\n//   };\r\n  \r\n  \r\n//   const fetchUpdatedCategories = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/api/categories');\r\n//       const data = await response.json();\r\n//       setCategories(data);\r\n  \r\n//     } catch (error) {\r\n//       console.error('Error fetching updated categories:', error);\r\n//     }\r\n//   };\r\n//   return (\r\n\r\n// <div className={`modal ${isOpen ? 'show' : ''}`} style={{ display: isOpen ? 'block' : 'none', background: 'rgba(0, 0, 0, 0.5)', position: 'fixed', top: '0', left: '0', width: '100%', height: '100%', zIndex: '9999' }}>\r\n//       <div className=\"modal-dialog\" style={{ width: '1000px', margin: '30px auto' }}>\r\n//         <div className=\"modal-content\" style={{ height: '600px',width: '700px', overflowY: 'auto' }}>\r\n//           <div className=\"modal-header\">\r\n//             <h5 className=\"modal-title\">Categories</h5>\r\n//             <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClose}></button>\r\n//           </div>\r\n//           <div className=\"modal-body\">\r\n//             <div className=\"mt-3\">\r\n//               <button onClick={openCreateCategoryModal} className=\"btn btn-success\">\r\n//                 Create Category\r\n//               </button>\r\n//             </div>\r\n//             <br />\r\n//             {isCreateCategoryOpen && <CreateCategory onClose={closeCreateCategoryModal} />}\r\n//             {isEditCategoryOpen && <EditCategory categoryId={selectedCategoryId} onClose={closeEditCategoryModal} />}\r\n//             <ul className=\"list-group\">\r\n//               {categories.map((category) => (\r\n//                 <li\r\n//                   key={category.id}\r\n//                   className={`list-group-item ${selectedCategoryId === category.id ? 'active' : ''}`}\r\n//                   onClick={() => handleCategorySelect(category.id)}\r\n//                 >\r\n//                   <div className=\"d-flex justify-content-between align-items-center\">\r\n//                     <span>{category.name}</span>\r\n//                     <div>\r\n//                       <button onClick={() => openEditCategoryModal(category.id)} className=\"btn btn-primary mx-2\">\r\n//                         Edit Category\r\n//                       </button>\r\n//                       <button onClick={() => onDeleteCategory(category.id)} className=\"btn btn-danger\">\r\n//                         Delete Category\r\n//                       </button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//             <button onClick={onClose} className=\"btn btn-secondary mt-3\" style={{ width: '10%', marginLeft: '45%' }}>\r\n//               Close\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default CategoryModal;\r\nimport React, { useState, useEffect } from 'react';\r\nimport CreateCategory from './CreateCategory'; \r\nimport EditCategory from './EditCategory'; \r\n\r\nconst CategoryModal = ({ isOpen, onClose, onSelectCategory, onDeleteCategory }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState(null);\r\n  const [isCreateCategoryOpen, setIsCreateCategoryOpen] = useState(false);\r\n  const [isEditCategoryOpen, setIsEditCategoryOpen] = useState(false);\r\n  const [confirmDeleteCategoryId, setConfirmDeleteCategoryId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/categories');\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const handleCategorySelect = (categoryId) => {\r\n    setSelectedCategoryId(categoryId);\r\n  };\r\n\r\n  const openCreateCategoryModal = () => {\r\n    setIsCreateCategoryOpen(true);\r\n  };\r\n\r\n  const closeCreateCategoryModal = () => {\r\n    setIsCreateCategoryOpen(false);\r\n  };\r\n\r\n  const openEditCategoryModal = () => {\r\n    setIsEditCategoryOpen(true);\r\n  };\r\n\r\n  const closeEditCategoryModal = () => {\r\n    setIsEditCategoryOpen(false);\r\n  };\r\n\r\n  const confirmDelete = (categoryId) => {\r\n    setConfirmDeleteCategoryId(categoryId);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setConfirmDeleteCategoryId(null);\r\n  };\r\n\r\n  const handleDeleteCategory = async (categoryId) => {\r\n    try {\r\n      await fetch(`http://localhost:8000/api/categories/${categoryId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      fetchUpdatedCategories();\r\n      setConfirmDeleteCategoryId(null);\r\n    } catch (error) {\r\n      console.error('Error deleting category:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUpdatedCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/categories');\r\n      const data = await response.json();\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error('Error fetching updated categories:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`modal ${isOpen ? 'show' : ''}`} style={{ display: isOpen ? 'block' : 'none', background: 'rgba(0, 0, 0, 0.5)', position: 'fixed', top: '0', left: '0', width: '100%', height: '100%', zIndex: '9999' }}>\r\n      <div className=\"modal-dialog\" style={{ width: '1000px', margin: '30px auto' }}>\r\n        <div className=\"modal-content\" style={{ height: '600px', width: '700px', overflowY: 'auto' }}>\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Categories</h5>\r\n            <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClose}></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"mt-3\">\r\n              <button onClick={openCreateCategoryModal} className=\"btn btn-success\">\r\n                Create Category\r\n              </button>\r\n            </div>\r\n            <br />\r\n            {isCreateCategoryOpen && <CreateCategory onClose={closeCreateCategoryModal} />}\r\n            {isEditCategoryOpen && <EditCategory categoryId={selectedCategoryId} onClose={closeEditCategoryModal} />}\r\n            <ul className=\"list-group\">\r\n              {categories.map((category) => (\r\n                <li\r\n                  key={category.id}\r\n                  className={`list-group-item ${selectedCategoryId === category.id ? 'active' : ''}`}\r\n                  onClick={() => handleCategorySelect(category.id)}\r\n                >\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <span>{category.name}</span>\r\n                    <div>\r\n                      <button onClick={() => openEditCategoryModal(category.id)} className=\"btn btn-primary mx-2\">\r\n                        Edit Category\r\n                      </button>\r\n                      {confirmDeleteCategoryId === category.id ? (\r\n                        <>\r\n                          <span>Are you sure?</span>\r\n                          <button onClick={() => handleDeleteCategory(category.id)} className=\"btn btn-danger mx-2\">\r\n                            Yes, Delete\r\n                          </button>\r\n                          <button onClick={cancelDelete} className=\"btn btn-secondary\">\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <button onClick={() => confirmDelete(category.id)} className=\"btn btn-danger\">\r\n                          Delete Category\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <button onClick={onClose} className=\"btn btn-secondary mt-3\" style={{ width: '10%', marginLeft: '45%' }}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryModal;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACkB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACsB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE5EC,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCb,aAAa,CAACY,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,oBAAoB,GAAIC,UAAU,IAAK;IAC3Cf,qBAAqB,CAACe,UAAU,CAAC;EACnC,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpCd,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMe,wBAAwB,GAAGA,CAAA,KAAM;IACrCf,uBAAuB,CAAC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;IAClCd,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMe,sBAAsB,GAAGA,CAAA,KAAM;IACnCf,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMgB,aAAa,GAAIL,UAAU,IAAK;IACpCT,0BAA0B,CAACS,UAAU,CAAC;EACxC,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBf,0BAA0B,CAAC,IAAI,CAAC;EAClC,CAAC;EAED,MAAMgB,oBAAoB,GAAG,MAAOP,UAAU,IAAK;IACjD,IAAI;MACF,MAAMN,KAAK,CAAE,wCAAuCM,UAAW,EAAC,EAAE;QAChEQ,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,sBAAsB,CAAC,CAAC;MACxBnB,0BAA0B,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMa,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCb,aAAa,CAACY,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,oBACExB,OAAA;IAAKsC,SAAS,EAAG,SAAQlC,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAACmC,KAAK,EAAE;MAAEC,OAAO,EAAEpC,MAAM,GAAG,OAAO,GAAG,MAAM;MAAEqC,UAAU,EAAE,oBAAoB;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,GAAG;MAAEC,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eACtNhD,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEM,KAAK,EAAE,QAAQ;QAAEI,MAAM,EAAE;MAAY,CAAE;MAAAD,QAAA,eAC5EhD,OAAA;QAAKsC,SAAS,EAAC,eAAe;QAACC,KAAK,EAAE;UAAEO,MAAM,EAAE,OAAO;UAAED,KAAK,EAAE,OAAO;UAAEK,SAAS,EAAE;QAAO,CAAE;QAAAF,QAAA,gBAC3FhD,OAAA;UAAKsC,SAAS,EAAC,cAAc;UAAAU,QAAA,gBAC3BhD,OAAA;YAAIsC,SAAS,EAAC,aAAa;YAAAU,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3CtD,OAAA;YAAQuD,IAAI,EAAC,QAAQ;YAACjB,SAAS,EAAC,WAAW;YAAC,cAAW,OAAO;YAACkB,OAAO,EAAEnD;UAAQ;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC,eACNtD,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAU,QAAA,gBACzBhD,OAAA;YAAKsC,SAAS,EAAC,MAAM;YAAAU,QAAA,eACnBhD,OAAA;cAAQwD,OAAO,EAAE5B,uBAAwB;cAACU,SAAS,EAAC,iBAAiB;cAAAU,QAAA,EAAC;YAEtE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNtD,OAAA;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACLzC,oBAAoB,iBAAIb,OAAA,CAACH,cAAc;YAACQ,OAAO,EAAEwB;UAAyB;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC7EvC,kBAAkB,iBAAIf,OAAA,CAACF,YAAY;YAAC6B,UAAU,EAAEhB,kBAAmB;YAACN,OAAO,EAAE0B;UAAuB;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxGtD,OAAA;YAAIsC,SAAS,EAAC,YAAY;YAAAU,QAAA,EACvBvC,UAAU,CAACgD,GAAG,CAAEC,QAAQ,iBACvB1D,OAAA;cAEEsC,SAAS,EAAG,mBAAkB3B,kBAAkB,KAAK+C,QAAQ,CAACC,EAAE,GAAG,QAAQ,GAAG,EAAG,EAAE;cACnFH,OAAO,EAAEA,CAAA,KAAM9B,oBAAoB,CAACgC,QAAQ,CAACC,EAAE,CAAE;cAAAX,QAAA,eAEjDhD,OAAA;gBAAKsC,SAAS,EAAC,mDAAmD;gBAAAU,QAAA,gBAChEhD,OAAA;kBAAAgD,QAAA,EAAOU,QAAQ,CAACE;gBAAI;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5BtD,OAAA;kBAAAgD,QAAA,gBACEhD,OAAA;oBAAQwD,OAAO,EAAEA,CAAA,KAAM1B,qBAAqB,CAAC4B,QAAQ,CAACC,EAAE,CAAE;oBAACrB,SAAS,EAAC,sBAAsB;oBAAAU,QAAA,EAAC;kBAE5F;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACRrC,uBAAuB,KAAKyC,QAAQ,CAACC,EAAE,gBACtC3D,OAAA,CAAAE,SAAA;oBAAA8C,QAAA,gBACEhD,OAAA;sBAAAgD,QAAA,EAAM;oBAAa;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAC1BtD,OAAA;sBAAQwD,OAAO,EAAEA,CAAA,KAAMtB,oBAAoB,CAACwB,QAAQ,CAACC,EAAE,CAAE;sBAACrB,SAAS,EAAC,qBAAqB;sBAAAU,QAAA,EAAC;oBAE1F;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eACTtD,OAAA;sBAAQwD,OAAO,EAAEvB,YAAa;sBAACK,SAAS,EAAC,mBAAmB;sBAAAU,QAAA,EAAC;oBAE7D;sBAAAG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA,eACT,CAAC,gBAEHtD,OAAA;oBAAQwD,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAAC0B,QAAQ,CAACC,EAAE,CAAE;oBAACrB,SAAS,EAAC,gBAAgB;oBAAAU,QAAA,EAAC;kBAE9E;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACT;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GA1BDI,QAAQ,CAACC,EAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA2Bd,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLtD,OAAA;YAAQwD,OAAO,EAAEnD,OAAQ;YAACiC,SAAS,EAAC,wBAAwB;YAACC,KAAK,EAAE;cAAEM,KAAK,EAAE,KAAK;cAAEgB,UAAU,EAAE;YAAM,CAAE;YAAAb,QAAA,EAAC;UAEzG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CArIIL,aAAa;AAAA2D,EAAA,GAAb3D,aAAa;AAuInB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}