{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\CreateProduct.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import { useNavigate } from 'react-router-dom'\n// import { useState } from 'react'\n// const endpoint ='http://localhost:8000/api/product'\n\n// const CreateProduct = () => {\n\n// const [description , setDescription] = useState('');\n// const [price , setPrice] = useState(0);\n// const [stock , setStock] = useState(0);\n// const navigate = useNavigate()\n\n// // const store =(e) =>{\n// // e.preventDefault()\n// // await axios.post(endpoint,{description:description,price:price,stock:stock})\n// // navigate('/')\n// // }\n\n// const store = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(endpoint, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ description, price, stock }),\n//       });\n\n//       if (!response.ok) {\n//         console.error(`HTTP error! Status: ${response.status}`);\n//         return;\n//       }\n\n//       // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\n//       navigate('/');\n//   };\n\n//   return (\n//     <div>\n\n//        <h3> CreateProduct</h3>\n\n//         <form onSubmit={store}>\n//             <div>\n//                 <label>Description</label>\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n\n//             </div>\n//             <div>\n//                 <label>Price</label>\n//                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\n\n//             </div>\n//             <div>\n//                 <label>Stock</label>\n//                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\n\n//             </div>\n// <button type='submit'>Crear</button>\n//         </form>\n//         </div>\n//   )\n// }\n\n// export default CreateProduct\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api';\nconst productEndpoint = `${endpoint}/product`;\nconst categoryEndpoint = `${endpoint}/category`;\nconst CreateProduct = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const navigate = useNavigate();\n  const store = async e => {\n    e.preventDefault();\n    const response = await fetch(productEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description,\n        price,\n        stock,\n        category_id: selectedCategory\n      })\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n\n    // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\n    navigate('/');\n  };\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(categoryEndpoint);\n        if (!response.ok) {\n          console.error(`HTTP error! Status: ${response.status}`);\n          return;\n        }\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"CreateProduct\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: store,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: price,\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: stock,\n          onChange: e => setStock(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategory,\n          onChange: e => setSelectedCategory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category.id,\n            children: category.name\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProduct, \"ArkzAXvsmOzJrJhEX332CmqBRtQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProduct;\nexport default CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","endpoint","productEndpoint","categoryEndpoint","CreateProduct","_s","description","setDescription","price","setPrice","stock","setStock","categories","setCategories","selectedCategory","setSelectedCategory","navigate","store","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","category_id","ok","console","error","status","fetchCategories","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","category","id","name","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/CreateProduct.jsx"],"sourcesContent":["// import React from 'react'\r\n// import { useNavigate } from 'react-router-dom'\r\n// import { useState } from 'react'\r\n// const endpoint ='http://localhost:8000/api/product'\r\n\r\n\r\n// const CreateProduct = () => {\r\n\r\n// const [description , setDescription] = useState('');\r\n// const [price , setPrice] = useState(0);\r\n// const [stock , setStock] = useState(0);\r\n// const navigate = useNavigate()\r\n\r\n// // const store =(e) =>{\r\n// // e.preventDefault()\r\n// // await axios.post(endpoint,{description:description,price:price,stock:stock})\r\n// // navigate('/')\r\n// // }\r\n\r\n// const store = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const response = await fetch(endpoint, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ description, price, stock }),\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         console.error(`HTTP error! Status: ${response.status}`);\r\n//         return;\r\n//       }\r\n  \r\n//       // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\r\n//       navigate('/');\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n        \r\n        \r\n        \r\n//        <h3> CreateProduct</h3>\r\n        \r\n//         <form onSubmit={store}>\r\n//             <div>\r\n//                 <label>Description</label>\r\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                \r\n//             </div>\r\n//             <div>\r\n//                 <label>Price</label>\r\n//                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n                \r\n//             </div>\r\n//             <div>\r\n//                 <label>Stock</label>\r\n//                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\r\n                \r\n//             </div>\r\n// <button type='submit'>Crear</button>\r\n//         </form>\r\n//         </div>\r\n//   )\r\n// }\r\n\r\n// export default CreateProduct\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst endpoint = 'http://localhost:8000/api';\r\nconst productEndpoint = `${endpoint}/product`;\r\nconst categoryEndpoint = `${endpoint}/category`;\r\n\r\nconst CreateProduct = () => {\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [stock, setStock] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const store = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(productEndpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`HTTP error! Status: ${response.status}`);\r\n      return;\r\n    }\r\n\r\n    // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch(categoryEndpoint);\r\n        if (!response.ok) {\r\n          console.error(`HTTP error! Status: ${response.status}`);\r\n          return;\r\n        }\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>CreateProduct</h3>\r\n      <form onSubmit={store}>\r\n        <div>\r\n          <label>Description</label>\r\n          <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Price</label>\r\n          <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Stock</label>\r\n          <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Category</label>\r\n          <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n            <option value=\"\">Select a category</option>\r\n            {categories.map((category) => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Create</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}