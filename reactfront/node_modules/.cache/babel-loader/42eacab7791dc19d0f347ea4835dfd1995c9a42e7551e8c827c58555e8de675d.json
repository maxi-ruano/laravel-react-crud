{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\ShowCategories.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const ShowCategories = () => {\n//   const [categories, setCategories] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n//   return (\n//     <div>\n//       <h3>Show Categories</h3>\n//       <ul>\n//         {categories.map((category) => (\n//           <li key={category.id}>{category.name}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowCategories;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowCategories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories'); // Ajusta la URL según tu backend\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []); // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-3\",\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = ShowCategories;\nexport default ShowCategories;\nvar _c;\n$RefreshReg$(_c, \"ShowCategories\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShowCategories","_s","categories","setCategories","fetchCategories","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","name","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/ShowCategories.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const ShowCategories = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Show Categories</h3>\r\n//       <ul>\r\n//         {categories.map((category) => (\r\n//           <li key={category.id}>{category.name}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowCategories;\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ShowCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3 className=\"mb-3\">Categories</h3>\r\n      <ul className=\"list-group\">\r\n        {categories.map((category) => (\r\n          <li key={category.id} className=\"list-group-item\">\r\n            {category.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCategories;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAE;QACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,aAAa,CAACI,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAMT,oBACEL,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bb,OAAA;MAAIY,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCjB,OAAA;MAAIY,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBV,UAAU,CAACe,GAAG,CAAEC,QAAQ,iBACvBnB,OAAA;QAAsBY,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC9CM,QAAQ,CAACC;MAAI,GADPD,QAAQ,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAjCID,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}