{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\ShowCategories.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const ShowCategories = () => {\n//   const [categories, setCategories] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n//   return (\n//     <div>\n//       <h3>Show Categories</h3>\n//       <ul>\n//         {categories.map((category) => (\n//           <li key={category.id}>{category.name}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default ShowCategories;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowCategories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories'); // Ajusta la URL según tu backend\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []); // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\n\n  const deleteCategory = async id => {\n    const response = await fetch(`http://localhost:8000/api/category/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n\n    // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\n    fetchCategories();\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"container mt-4\">\n    //   <h3 className=\"mb-3\">Categories</h3>\n    //   <ul className=\"list-group\">\n    //     {categories.map((category) => (\n    //       <li key={category.id} className=\"list-group-item\">\n    //         {category.name}\n    //       </li>\n    //     ))}\n    //   </ul>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [category.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteCategory(category.id),\n            className: \"btn btn-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ShowCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = ShowCategories;\nexport default ShowCategories;\nvar _c;\n$RefreshReg$(_c, \"ShowCategories\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShowCategories","_s","categories","setCategories","fetchCategories","response","fetch","data","json","error","console","deleteCategory","id","method","ok","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","name","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/ShowCategories.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const ShowCategories = () => {\r\n//   const [categories, setCategories] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/categories');  // Reemplaza con la URL correcta de tu backend\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Show Categories</h3>\r\n//       <ul>\r\n//         {categories.map((category) => (\r\n//           <li key={category.id}>{category.name}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ShowCategories;\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ShowCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu backend\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);  // La dependencia vacía asegura que se ejecute solo una vez al montar el componente\r\n\r\n  const deleteCategory = async (id) => {\r\n    const response = await fetch(`http://localhost:8000/api/category/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`HTTP error! Status: ${response.status}`);\r\n      return;\r\n    }\r\n\r\n    // Puedes realizar alguna acción después de eliminar la categoría, por ejemplo, volver a cargar la lista de categorías\r\n    fetchCategories();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    // <div className=\"container mt-4\">\r\n    //   <h3 className=\"mb-3\">Categories</h3>\r\n    //   <ul className=\"list-group\">\r\n    //     {categories.map((category) => (\r\n    //       <li key={category.id} className=\"list-group-item\">\r\n    //         {category.name}\r\n    //       </li>\r\n          \r\n    //     ))}\r\n    //   </ul>\r\n    // </div>\r\n    <div className=\"container mt-4\">\r\n    <h3 className=\"mb-3\">Categories</h3>\r\n    <ul className=\"list-group\">\r\n      {categories.map((category) => (\r\n        <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          {category.name}\r\n          <button onClick={() => deleteCategory(category.id)} className='btn btn-danger'>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ShowCategories;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAE;QACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,aAAa,CAACI,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,MAAMO,cAAc,GAAG,MAAOC,EAAE,IAAK;IACnC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCM,EAAG,EAAC,EAAE;MACvEC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAChBJ,OAAO,CAACD,KAAK,CAAE,uBAAsBJ,QAAQ,CAACU,MAAO,EAAC,CAAC;MACvD;IACF;;IAEA;IACAX,eAAe,CAAC,CAAC;EACnB,CAAC;EAID;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACAL,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/BlB,OAAA;QAAIiB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCtB,OAAA;QAAIiB,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBf,UAAU,CAACoB,GAAG,CAAEC,QAAQ,iBACvBxB,OAAA;UAAsBiB,SAAS,EAAC,mEAAmE;UAAAC,QAAA,GAChGM,QAAQ,CAACC,IAAI,eACdzB,OAAA;YAAQ0B,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACY,QAAQ,CAACX,EAAE,CAAE;YAACI,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAE/E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAJFE,QAAQ,CAACX,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;AAER,CAAC;AAACpB,EAAA,CA3DID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA6DpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}