{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW3\\\\crud\\\\reactfront\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//     const navigate = useNavigate(); \n//     const [error, setError] = useState(null);\n//     const [successMessage, setSuccessMessage] = useState(null);\n\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: '',\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:8000/api/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const data = await response.json().catch((error) => {\n//         console.error('Error al analizar la respuesta JSON:', error);\n//       });\n\n//       console.log(data);\n//       if (response.ok) {\n\n//         // Redirigir al usuario a la URL deseada (por ejemplo, http://localhost:3000/products)\n//         setSuccessMessage('Inicio de sesión exitoso');\n//         // setSuccessMessage((message) => console.log('Mensaje de éxito:', message));\n\n//         navigate('/products'); \n//         // setSuccessMessage((message) => console.log('Mensaje de éxito:', message));\n\n//       }\n//       else {\n//         // Error: Actualiza el estado de error para mostrar un mensaje al usuario\n//         setError(data.error || 'Hubo un problema al iniciar sesión');\n//       }\n\n//     } catch (error) {\n//       console.error('Error al enviar la solicitud:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Iniciar Sesión</h2>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//       {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\n\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Correo Electrónico:\n//           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n//         </label>\n//         <br />\n//         <label>\n//           Contraseña:\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Iniciar Sesión</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({});\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const responseData = await response.json().catch(error => {\n        console.error('Error al analizar la respuesta JSON:', error);\n      });\n      console.log(responseData);\n\n      // Actualizamos el estado data con la respuesta del backend\n      setData(responseData);\n      if (response.ok) {\n        // Redirigir al usuario a la URL deseada (por ejemplo, http://localhost:3000/products)\n        navigate('/products');\n      } else {\n        // Error: Actualiza el estado de error para mostrar un mensaje al usuario\n        setError(responseData.error || 'Hubo un problema al iniciar sesión');\n      }\n    } catch (error) {\n      console.error('Error al enviar la solicitud:', error);\n    }\n  };\n\n  // UseEffect para redirigir después de un mensaje de éxito\n  useEffect(() => {\n    if (data.message) {\n      navigate('/products');\n    }\n  }, [data.message, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Correo Electr\\xF3nico:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"rIbW8Qp6lsJ1DSLID2DSTn22u/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","error","setError","data","setData","formData","setFormData","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","catch","console","log","ok","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW3/crud/reactfront/src/components/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// const Login = () => {\r\n//     const navigate = useNavigate(); \r\n//     const [error, setError] = useState(null);\r\n//     const [successMessage, setSuccessMessage] = useState(null);\r\n\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n\r\n//   const handleSubmit = async (e) => {\r\n    \r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/api/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const data = await response.json().catch((error) => {\r\n//         console.error('Error al analizar la respuesta JSON:', error);\r\n//       });\r\n\r\n//       console.log(data);\r\n//       if (response.ok) {\r\n\r\n//         // Redirigir al usuario a la URL deseada (por ejemplo, http://localhost:3000/products)\r\n//         setSuccessMessage('Inicio de sesión exitoso');\r\n//         // setSuccessMessage((message) => console.log('Mensaje de éxito:', message));\r\n\r\n//         navigate('/products'); \r\n//         // setSuccessMessage((message) => console.log('Mensaje de éxito:', message));\r\n\r\n        \r\n\r\n\r\n//       }\r\n//       else {\r\n//         // Error: Actualiza el estado de error para mostrar un mensaje al usuario\r\n//         setError(data.error || 'Hubo un problema al iniciar sesión');\r\n//       }\r\n      \r\n//     } catch (error) {\r\n//       console.error('Error al enviar la solicitud:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Iniciar Sesión</h2>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      \r\n//       {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           Correo Electrónico:\r\n//           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n//         </label>\r\n//         <br />\r\n//         <label>\r\n//           Contraseña:\r\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n//         </label>\r\n//         <br />\r\n//         <button type=\"submit\">Iniciar Sesión</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [error, setError] = useState(null);\r\n    const [data, setData] = useState({});\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const responseData = await response.json().catch((error) => {\r\n                console.error('Error al analizar la respuesta JSON:', error);\r\n            });\r\n\r\n            console.log(responseData);\r\n\r\n            // Actualizamos el estado data con la respuesta del backend\r\n            setData(responseData);\r\n\r\n            if (response.ok) {\r\n                // Redirigir al usuario a la URL deseada (por ejemplo, http://localhost:3000/products)\r\n                navigate('/products');\r\n            } else {\r\n                // Error: Actualiza el estado de error para mostrar un mensaje al usuario\r\n                setError(responseData.error || 'Hubo un problema al iniciar sesión');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al enviar la solicitud:', error);\r\n        }\r\n    };\r\n\r\n    // UseEffect para redirigir después de un mensaje de éxito\r\n    useEffect(() => {\r\n        if (data.message) {\r\n            navigate('/products');\r\n        }\r\n    }, [data.message, navigate]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Iniciar Sesión</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {/* Mantenemos el mensaje de éxito aquí */}\r\n            {/* {data.message && <p style={{ color: 'green' }}>{data.message}</p>} */}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Correo Electrónico:\r\n                    <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Contraseña:\r\n                    <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Iniciar Sesión</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}