{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\app\\\\reactfront\\\\src\\\\components\\\\EditProduct.jsx\",\n  _s = $RefreshSig$();\n// // // import React from 'react'\n// // // import { useState,useEffect } from 'react'\n// // // import { useNavigate, useParams } from 'react-router-dom'\n\n// // // const endpoint = 'http://localhost:8000/api/product'\n\n// // // const EditProduct = () => {\n// // //     const [description , setDescription] = useState('');\n// // // const [price , setPrice] = useState(0);\n// // // const [stock , setStock] = useState(0);\n// // // const navigate = useNavigate();\n// // // const {id} = useParams()\n\n// // // const update =async  (e) =>{\n// // // e.preventDefault()\n\n// // // const response = await fetch(`${endpoint}/${id}`, {\n// // //     method: 'PUT',\n// // //     headers: {\n// // //       'Content-Type': 'application/json',\n// // //     },\n// // //     body: JSON.stringify({ description, price, stock }),\n// // //   });\n\n// // //   if (!response.ok) {\n// // //     console.error(`HTTP error! Status: ${response.status}`);\n// // //     return;\n// // //   }\n\n// // //   // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\n// // //   navigate('/');\n\n// // // }\n\n// // // useEffect(()=>{\n\n// // //     const getProductById = async () =>{\n// // //         const response = await fetch(`${endpoint}/${id}`)\n// // //         const data = await response.json()\n// // //         setDescription(data.description)\n// // //         setPrice(data.price)\n// // //         setStock(data.stock)\n// // //     }\n// // //     getProductById()\n// // // },[])\n\n// // //   return (\n// // //     <div>\n\n// // // <div>\n\n// // //        <h3> EditProduct</h3>\n\n// // //         <form onSubmit={update}>\n// // //             <div>\n// // //                 <label>Description</label>\n// // //                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n\n// // //             </div>\n// // //             <div>\n// // //                 <label>Price</label>\n// // //                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\n\n// // //             </div>\n// // //             <div>\n// // //                 <label>Stock</label>\n// // //                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\n\n// // //             </div>\n// // // <button type='submit'>Edit</button>\n// // //         </form>\n// // //         </div>\n\n// // //     </div>\n// // //   )\n// // // }\n\n// // // export default EditProduct\n\n// // import React, { useState, useEffect } from 'react';\n// // import { useNavigate, useParams } from 'react-router-dom';\n\n// // const endpoint = 'http://localhost:8000/api';\n// // const productEndpoint = `${endpoint}/product`;\n// // const categoriesEndpoint = `${endpoint}/categories`;\n\n// // const EditProduct = () => {\n// //   const [description, setDescription] = useState('');\n// //   const [price, setPrice] = useState(0);\n// //   const [stock, setStock] = useState(0);\n// //   const [categories, setCategories] = useState([]);\n// //   const [selectedCategory, setSelectedCategory] = useState('');\n// //   const [isProductUpdated, setIsProductUpdated] = useState(false); // Cambié el nombre del estado\n\n// //   const navigate = useNavigate();\n// //   const { id } = useParams();\n\n// //   const update = async (e) => {\n// //     e.preventDefault();\n\n// //     const response = await fetch(`${productEndpoint}/${id}`, {\n// //       method: 'PUT',\n// //       headers: {\n// //         'Content-Type': 'application/json',\n// //       },\n// //       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\n// //     });\n\n// //     if (!response.ok) {\n// //       console.error(`HTTP error! Status: ${response.status}`);\n// //       return;\n// //     }\n// //     setIsProductUpdated(true); // Cambié el nombre del estado\n// //     setTimeout(() => {\n// //       setIsProductUpdated(false); // Cambié el nombre del estado\n// //       navigate('/');\n// //     }, 3000);\n// //     // navigate('/');\n// //   };\n\n// //   useEffect(() => {\n// //     const getProductById = async () => {\n// //       const response = await fetch(`${productEndpoint}/${id}`);\n// //       const data = await response.json();\n// //       setDescription(data.description);\n// //       setPrice(data.price);\n// //       setStock(data.stock);\n// //       setSelectedCategory(data.category_id);\n// //     };\n\n// //     const fetchCategories = async () => {\n// //       try {\n// //         const response = await fetch(categoriesEndpoint);\n// //         const data = await response.json();\n// //         setCategories(data);\n// //       } catch (error) {\n// //         console.error('Error fetching categories:', error);\n// //       }\n// //     };\n\n// //     getProductById();\n// //     fetchCategories();\n// //   }, [id]);\n\n// //   return (\n// //     <div>\n// //       <h3>Edit Product</h3>\n// //       {isProductUpdated && (\n// //         <p style={{ color: 'green' }}>Product updated successfully!</p>\n// //       )}\n// //       <form onSubmit={update}>\n// //         <div>\n// //           <label>Description</label>\n// //           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n// //         </div>\n// //         <div>\n// //           <label>Price</label>\n// //           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\n// //         </div>\n// //         <div>\n// //           <label>Stock</label>\n// //           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\n// //         </div>\n// //         <div>\n// //           <label>Category</label>\n// //           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n// //             <option value=\"\">Select a category</option>\n// //             {categories.map((category) => (\n// //               <option key={category.id} value={category.id}>\n// //                 {category.name}\n// //               </option>\n// //             ))}\n// //           </select>\n// //         </div>\n// //         <button type=\"submit\">Edit</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default EditProduct;\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n\n// const endpoint = 'http://localhost:8000/api';\n// const productEndpoint = `${endpoint}/product`;\n// const categoriesEndpoint = `${endpoint}/categories`;\n\n// const EditProduct = () => {\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState(0);\n//   const [stock, setStock] = useState(0);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [isProductUpdated, setIsProductUpdated] = useState(false);\n\n//   const navigate = useNavigate();\n//   const { id } = useParams();\n\n//   const update = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(`${productEndpoint}/${id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\n//     });\n\n//     if (!response.ok) {\n//       console.error(`HTTP error! Status: ${response.status}`);\n//       return;\n//     }\n\n//     setIsProductUpdated(true);\n\n//     setTimeout(() => {\n//       setIsProductUpdated(false);\n//       navigate('/');\n//     }, 3000);\n//   };\n\n//   useEffect(() => {\n//     const getProductById = async () => {\n//       const response = await fetch(`${productEndpoint}/${id}`);\n//       const data = await response.json();\n//       setDescription(data.description);\n//       setPrice(data.price);\n//       setStock(data.stock);\n//       setSelectedCategory(data.category_id);\n//     };\n\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch(categoriesEndpoint);\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     getProductById();\n//     fetchCategories();\n//   }, [id]);\n\n//   return (\n//     <div>\n//       <div>\n//         <h3>Edit Product</h3>\n//         {isProductUpdated && <p style={{ color: 'green' }}>Product updated successfully!</p>}\n//         <form onSubmit={update}>\n//           <div>\n//             <label>Description</label>\n//             <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Price</label>\n//             <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Stock</label>\n//             <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\n//           </div>\n//           <div>\n//             <label>Category</label>\n//             <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n//               <option value=\"\">Select a category</option>\n//               {categories.map((category) => (\n//                 <option key={category.id} value={category.id}>\n//                   {category.name}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n//           <button type='submit'>Edit</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditProduct;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api';\nconst productEndpoint = `${endpoint}/product`;\nconst categoriesEndpoint = `${endpoint}/categories`;\nconst EditProduct = () => {\n  _s();\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isProductUpdated, setIsProductUpdated] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const update = async e => {\n    e.preventDefault();\n    const response = await fetch(`${productEndpoint}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description,\n        price,\n        stock,\n        category_id: String(selectedCategory)\n      })\n    });\n    if (!response.ok) {\n      console.error(`HTTP error! Status: ${response.status}`);\n      return;\n    }\n    setIsProductUpdated(true);\n    setTimeout(() => {\n      setIsProductUpdated(false);\n      navigate('/');\n    }, 3000);\n  };\n  useEffect(() => {\n    const getProductById = async () => {\n      const response = await fetch(`${productEndpoint}/${id}`);\n      const data = await response.json();\n      setDescription(data.description);\n      setPrice(data.price);\n      setStock(data.stock);\n      // setSelectedCategory(data.category_id); // Asegurarse de que selectedCategory coincida con la categoría actual\n      setSelectedCategory(String(data.category_id || ''));\n    };\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(categoriesEndpoint);\n        const data = await response.json();\n        setCategories(data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    getProductById();\n    fetchCategories();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), isProductUpdated && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Product updated successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: update,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: stock,\n            onChange: e => setStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCategory ? selectedCategory.id : '',\n            onChange: e => {\n              const categoryId = e.target.value;\n              const selectedCategory = categories.find(category => category.id === categoryId);\n              setSelectedCategory(selectedCategory);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 3\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 5\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProduct, \"50yiRyYk7rCaeprCg9LDcd0+/p8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditProduct;\nexport default EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","endpoint","productEndpoint","categoriesEndpoint","EditProduct","_s","description","setDescription","price","setPrice","stock","setStock","categories","setCategories","selectedCategory","setSelectedCategory","isProductUpdated","setIsProductUpdated","navigate","id","update","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","category_id","String","ok","console","error","status","setTimeout","getProductById","data","json","fetchCategories","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","categoryId","find","category","map","name","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/app/reactfront/src/components/EditProduct.jsx"],"sourcesContent":["// // // import React from 'react'\r\n// // // import { useState,useEffect } from 'react'\r\n// // // import { useNavigate, useParams } from 'react-router-dom'\r\n\r\n\r\n// // // const endpoint = 'http://localhost:8000/api/product'\r\n\r\n// // // const EditProduct = () => {\r\n// // //     const [description , setDescription] = useState('');\r\n// // // const [price , setPrice] = useState(0);\r\n// // // const [stock , setStock] = useState(0);\r\n// // // const navigate = useNavigate();\r\n// // // const {id} = useParams()\r\n\r\n// // // const update =async  (e) =>{\r\n// // // e.preventDefault()\r\n\r\n// // // const response = await fetch(`${endpoint}/${id}`, {\r\n// // //     method: 'PUT',\r\n// // //     headers: {\r\n// // //       'Content-Type': 'application/json',\r\n// // //     },\r\n// // //     body: JSON.stringify({ description, price, stock }),\r\n// // //   });\r\n\r\n// // //   if (!response.ok) {\r\n// // //     console.error(`HTTP error! Status: ${response.status}`);\r\n// // //     return;\r\n// // //   }\r\n\r\n// // //   // Puedes realizar alguna acción después de enviar la solicitud, por ejemplo, navegar a otra página\r\n// // //   navigate('/');\r\n\r\n// // // }\r\n\r\n// // // useEffect(()=>{\r\n\r\n// // //     const getProductById = async () =>{\r\n// // //         const response = await fetch(`${endpoint}/${id}`)\r\n// // //         const data = await response.json()\r\n// // //         setDescription(data.description)\r\n// // //         setPrice(data.price)\r\n// // //         setStock(data.stock)\r\n// // //     }\r\n// // //     getProductById()\r\n// // // },[])\r\n\r\n// // //   return (\r\n// // //     <div>\r\n\r\n// // // <div>\r\n        \r\n        \r\n        \r\n// // //        <h3> EditProduct</h3>\r\n        \r\n// // //         <form onSubmit={update}>\r\n// // //             <div>\r\n// // //                 <label>Description</label>\r\n// // //                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                \r\n// // //             </div>\r\n// // //             <div>\r\n// // //                 <label>Price</label>\r\n// // //                 <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n                \r\n// // //             </div>\r\n// // //             <div>\r\n// // //                 <label>Stock</label>\r\n// // //                 <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)}/>\r\n                \r\n// // //             </div>\r\n// // // <button type='submit'>Edit</button>\r\n// // //         </form>\r\n// // //         </div>\r\n\r\n\r\n\r\n// // //     </div>\r\n// // //   )\r\n// // // }\r\n\r\n// // // export default EditProduct\r\n\r\n// // import React, { useState, useEffect } from 'react';\r\n// // import { useNavigate, useParams } from 'react-router-dom';\r\n\r\n// // const endpoint = 'http://localhost:8000/api';\r\n// // const productEndpoint = `${endpoint}/product`;\r\n// // const categoriesEndpoint = `${endpoint}/categories`;\r\n\r\n// // const EditProduct = () => {\r\n// //   const [description, setDescription] = useState('');\r\n// //   const [price, setPrice] = useState(0);\r\n// //   const [stock, setStock] = useState(0);\r\n// //   const [categories, setCategories] = useState([]);\r\n// //   const [selectedCategory, setSelectedCategory] = useState('');\r\n// //   const [isProductUpdated, setIsProductUpdated] = useState(false); // Cambié el nombre del estado\r\n\r\n// //   const navigate = useNavigate();\r\n// //   const { id } = useParams();\r\n\r\n// //   const update = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     const response = await fetch(`${productEndpoint}/${id}`, {\r\n// //       method: 'PUT',\r\n// //       headers: {\r\n// //         'Content-Type': 'application/json',\r\n// //       },\r\n// //       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n// //     });\r\n\r\n// //     if (!response.ok) {\r\n// //       console.error(`HTTP error! Status: ${response.status}`);\r\n// //       return;\r\n// //     }\r\n// //     setIsProductUpdated(true); // Cambié el nombre del estado\r\n// //     setTimeout(() => {\r\n// //       setIsProductUpdated(false); // Cambié el nombre del estado\r\n// //       navigate('/');\r\n// //     }, 3000);\r\n// //     // navigate('/');\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     const getProductById = async () => {\r\n// //       const response = await fetch(`${productEndpoint}/${id}`);\r\n// //       const data = await response.json();\r\n// //       setDescription(data.description);\r\n// //       setPrice(data.price);\r\n// //       setStock(data.stock);\r\n// //       setSelectedCategory(data.category_id);\r\n// //     };\r\n\r\n// //     const fetchCategories = async () => {\r\n// //       try {\r\n// //         const response = await fetch(categoriesEndpoint);\r\n// //         const data = await response.json();\r\n// //         setCategories(data);\r\n// //       } catch (error) {\r\n// //         console.error('Error fetching categories:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     getProductById();\r\n// //     fetchCategories();\r\n// //   }, [id]);\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h3>Edit Product</h3>\r\n// //       {isProductUpdated && (\r\n// //         <p style={{ color: 'green' }}>Product updated successfully!</p>\r\n// //       )}\r\n// //       <form onSubmit={update}>\r\n// //         <div>\r\n// //           <label>Description</label>\r\n// //           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n// //         </div>\r\n// //         <div>\r\n// //           <label>Price</label>\r\n// //           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n// //         </div>\r\n// //         <div>\r\n// //           <label>Stock</label>\r\n// //           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n// //         </div>\r\n// //         <div>\r\n// //           <label>Category</label>\r\n// //           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n// //             <option value=\"\">Select a category</option>\r\n// //             {categories.map((category) => (\r\n// //               <option key={category.id} value={category.id}>\r\n// //                 {category.name}\r\n// //               </option>\r\n// //             ))}\r\n// //           </select>\r\n// //         </div>\r\n// //         <button type=\"submit\">Edit</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default EditProduct;\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n\r\n// const endpoint = 'http://localhost:8000/api';\r\n// const productEndpoint = `${endpoint}/product`;\r\n// const categoriesEndpoint = `${endpoint}/categories`;\r\n\r\n// const EditProduct = () => {\r\n//   const [description, setDescription] = useState('');\r\n//   const [price, setPrice] = useState(0);\r\n//   const [stock, setStock] = useState(0);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('');\r\n//   const [isProductUpdated, setIsProductUpdated] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n//   const { id } = useParams();\r\n\r\n//   const update = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const response = await fetch(`${productEndpoint}/${id}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       console.error(`HTTP error! Status: ${response.status}`);\r\n//       return;\r\n//     }\r\n\r\n//     setIsProductUpdated(true);\r\n\r\n//     setTimeout(() => {\r\n//       setIsProductUpdated(false);\r\n//       navigate('/');\r\n//     }, 3000);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const getProductById = async () => {\r\n//       const response = await fetch(`${productEndpoint}/${id}`);\r\n//       const data = await response.json();\r\n//       setDescription(data.description);\r\n//       setPrice(data.price);\r\n//       setStock(data.stock);\r\n//       setSelectedCategory(data.category_id);\r\n//     };\r\n\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch(categoriesEndpoint);\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     getProductById();\r\n//     fetchCategories();\r\n//   }, [id]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <h3>Edit Product</h3>\r\n//         {isProductUpdated && <p style={{ color: 'green' }}>Product updated successfully!</p>}\r\n//         <form onSubmit={update}>\r\n//           <div>\r\n//             <label>Description</label>\r\n//             <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Price</label>\r\n//             <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Stock</label>\r\n//             <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n//           </div>\r\n//           <div>\r\n//             <label>Category</label>\r\n//             <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n//               <option value=\"\">Select a category</option>\r\n//               {categories.map((category) => (\r\n//                 <option key={category.id} value={category.id}>\r\n//                   {category.name}\r\n//                 </option>\r\n//               ))}\r\n//             </select>\r\n//           </div>\r\n//           <button type='submit'>Edit</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditProduct;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst endpoint = 'http://localhost:8000/api';\r\nconst productEndpoint = `${endpoint}/product`;\r\nconst categoriesEndpoint = `${endpoint}/categories`;\r\n\r\nconst EditProduct = () => {\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [stock, setStock] = useState(0);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [isProductUpdated, setIsProductUpdated] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const update = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(`${productEndpoint}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ description, price, stock,  category_id: String(selectedCategory) }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error(`HTTP error! Status: ${response.status}`);\r\n      return;\r\n    }\r\n\r\n    setIsProductUpdated(true);\r\n\r\n    setTimeout(() => {\r\n      setIsProductUpdated(false);\r\n      navigate('/');\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProductById = async () => {\r\n      const response = await fetch(`${productEndpoint}/${id}`);\r\n      \r\n      const data = await response.json();\r\n      setDescription(data.description);\r\n      setPrice(data.price);\r\n      setStock(data.stock);\r\n      // setSelectedCategory(data.category_id); // Asegurarse de que selectedCategory coincida con la categoría actual\r\n      setSelectedCategory(String(data.category_id || ''));\r\n\r\n\r\n    };\r\n\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch(categoriesEndpoint);\r\n        const data = await response.json();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n\r\n    getProductById();\r\n    fetchCategories();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Edit Product</h3>\r\n        {isProductUpdated && <p style={{ color: 'green' }}>Product updated successfully!</p>}\r\n        <form onSubmit={update}>\r\n          <div>\r\n            <label>Description</label>\r\n            <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <label>Price</label>\r\n            <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <label>Stock</label>\r\n            <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n          </div>\r\n          <div>\r\n            <label>Category</label>\r\n            {/* <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n              <option value=\"\">Select a category</option>\r\n              {categories.map((category) => (\r\n                <option key={category.id} value={category.id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n            </select> */}\r\n            <select\r\n  value={selectedCategory ? selectedCategory.id : ''}\r\n  onChange={(e) => {\r\n    const categoryId = e.target.value;\r\n    const selectedCategory = categories.find((category) => category.id === categoryId);\r\n    setSelectedCategory(selectedCategory);\r\n  }}\r\n>\r\n  <option value=\"\">Select a category</option>\r\n  {categories.map((category) => (\r\n    <option key={category.id} value={category.id}>\r\n      {category.name}\r\n    </option>\r\n  ))}\r\n</select>\r\n          </div>\r\n          <button type='submit'>Edit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAG,2BAA2B;AAC5C,MAAMC,eAAe,GAAI,GAAED,QAAS,UAAS;AAC7C,MAAME,kBAAkB,GAAI,GAAEF,QAAS,aAAY;AAEnD,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMuB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEsB;EAAG,CAAC,GAAGrB,SAAS,CAAC,CAAC;EAE1B,MAAMsB,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,eAAgB,IAAGiB,EAAG,EAAC,EAAE;MACvDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEvB,WAAW;QAAEE,KAAK;QAAEE,KAAK;QAAGoB,WAAW,EAAEC,MAAM,CAACjB,gBAAgB;MAAE,CAAC;IAC5F,CAAC,CAAC;IAEF,IAAI,CAACS,QAAQ,CAACS,EAAE,EAAE;MAChBC,OAAO,CAACC,KAAK,CAAE,uBAAsBX,QAAQ,CAACY,MAAO,EAAC,CAAC;MACvD;IACF;IAEAlB,mBAAmB,CAAC,IAAI,CAAC;IAEzBmB,UAAU,CAAC,MAAM;MACfnB,mBAAmB,CAAC,KAAK,CAAC;MAC1BC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAMyC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEtB,eAAgB,IAAGiB,EAAG,EAAC,CAAC;MAExD,MAAMmB,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClChC,cAAc,CAAC+B,IAAI,CAAChC,WAAW,CAAC;MAChCG,QAAQ,CAAC6B,IAAI,CAAC9B,KAAK,CAAC;MACpBG,QAAQ,CAAC2B,IAAI,CAAC5B,KAAK,CAAC;MACpB;MACAK,mBAAmB,CAACgB,MAAM,CAACO,IAAI,CAACR,WAAW,IAAI,EAAE,CAAC,CAAC;IAGrD,CAAC;IAED,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACrB,kBAAkB,CAAC;QAChD,MAAMmC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;QAClC1B,aAAa,CAACyB,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;IAChBG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACrB,EAAE,CAAC,CAAC;EAER,oBACEnB,OAAA;IAAAyC,QAAA,eACEzC,OAAA;MAAAyC,QAAA,gBACEzC,OAAA;QAAAyC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpB7B,gBAAgB,iBAAIhB,OAAA;QAAG8C,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpF7C,OAAA;QAAMgD,QAAQ,EAAE5B,MAAO;QAAAqB,QAAA,gBACrBzC,OAAA;UAAAyC,QAAA,gBACEzC,OAAA;YAAAyC,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B7C,OAAA;YAAOiD,IAAI,EAAC,MAAM;YAACC,KAAK,EAAE5C,WAAY;YAAC6C,QAAQ,EAAG9B,CAAC,IAAKd,cAAc,CAACc,CAAC,CAAC+B,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC,eACN7C,OAAA;UAAAyC,QAAA,gBACEzC,OAAA;YAAAyC,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpB7C,OAAA;YAAOiD,IAAI,EAAC,MAAM;YAACC,KAAK,EAAE1C,KAAM;YAAC2C,QAAQ,EAAG9B,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAAC+B,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACN7C,OAAA;UAAAyC,QAAA,gBACEzC,OAAA;YAAAyC,QAAA,EAAO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpB7C,OAAA;YAAOiD,IAAI,EAAC,MAAM;YAACC,KAAK,EAAExC,KAAM;YAACyC,QAAQ,EAAG9B,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAAC+B,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eACN7C,OAAA;UAAAyC,QAAA,gBACEzC,OAAA;YAAAyC,QAAA,EAAO;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eASvB7C,OAAA;YACVkD,KAAK,EAAEpC,gBAAgB,GAAGA,gBAAgB,CAACK,EAAE,GAAG,EAAG;YACnDgC,QAAQ,EAAG9B,CAAC,IAAK;cACf,MAAMgC,UAAU,GAAGhC,CAAC,CAAC+B,MAAM,CAACF,KAAK;cACjC,MAAMpC,gBAAgB,GAAGF,UAAU,CAAC0C,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACpC,EAAE,KAAKkC,UAAU,CAAC;cAClFtC,mBAAmB,CAACD,gBAAgB,CAAC;YACvC,CAAE;YAAA2B,QAAA,gBAEFzC,OAAA;cAAQkD,KAAK,EAAC,EAAE;cAAAT,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC1CjC,UAAU,CAAC4C,GAAG,CAAED,QAAQ,iBACvBvD,OAAA;cAA0BkD,KAAK,EAAEK,QAAQ,CAACpC,EAAG;cAAAsB,QAAA,EAC1Cc,QAAQ,CAACE;YAAI,GADHF,QAAQ,CAACpC,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eACN7C,OAAA;UAAQiD,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxC,EAAA,CAhHID,WAAW;EAAA,QAQEP,WAAW,EACbC,SAAS;AAAA;AAAA4D,EAAA,GATpBtD,WAAW;AAkHjB,eAAeA,WAAW;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}