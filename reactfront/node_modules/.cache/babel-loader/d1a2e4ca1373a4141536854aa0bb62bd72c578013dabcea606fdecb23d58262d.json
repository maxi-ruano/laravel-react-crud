{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Master PC\\\\Desktop\\\\NEW\\\\Crud\\\\reactfront\\\\src\\\\components\\\\CreateProduct.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const endpoint = 'http://localhost:8000/api';\n// const productEndpoint = `${endpoint}/product`;\n// const categoriesEndpoint = `${endpoint}/categories`; // Asegúrate de tener la ruta correcta para obtener las categorías\n\n// const CreateProduct = () => {\n//   const [description, setDescription] = useState('');\n//   const [price, setPrice] = useState(0);\n//   const [stock, setStock] = useState(0);\n//   const [categories, setCategories] = useState([]);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [isProductCreated, setIsProductCreated] = useState(false); // Nuevo estado\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const response = await fetch(categoriesEndpoint);\n//         const data = await response.json();\n//         setCategories(data);\n//       } catch (error) {\n//         console.error('Error fetching categories:', error);\n//       }\n//     };\n\n//     fetchCategories();\n//   }, []);\n\n//   const store = async (e) => {\n//     e.preventDefault();\n\n//     const response = await fetch(productEndpoint, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\n//     });\n\n//     if (!response.ok) {\n//       console.error(`HTTP error! Status: ${response.status}`);\n//       return;\n//     }\n//     setIsProductCreated(true); // Establecemos el estado a true cuando el producto es creado\n//     setTimeout(() => {\n//       setIsProductCreated(false); // Después de 3 segundos, reseteamos el estado\n//       navigate('/');\n//     }, 3000);\n//     // navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h3>Create Product</h3>\n//       {/* {isProductCreated && <p>Product created successfully!</p>} */}\n//       {isProductCreated && (\n//       <p style={{ color: 'green' }}>Product created successfully!</p>\n//     )}\n//       <form onSubmit={store}>\n//         <div>\n//           <label>Description</label>\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required/>\n//         </div>\n//         <div>\n//           <label>Price</label>\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} required />\n//         </div>\n//         <div>\n//           <label>Stock</label>\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} required/>\n//         </div>\n//         <div>\n//           <label>Category</label>\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)} required>\n//             <option value=\"\">Select a category</option>\n//             {categories.map((category) => (\n//               <option key={category.id} value={category.id}>\n//                 {category.name}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n//         <button type=\"submit\">Create</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default CreateProduct;\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ProductForm from './ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'http://localhost:8000/api';\nconst productEndpoint = `${endpoint}/product`;\nconst categoriesEndpoint = `${endpoint}/categories`;\nconst CreateProduct = () => {\n  _s();\n  const [isProductCreated, setIsProductCreated] = useState(false);\n  const navigate = useNavigate();\n  const handleCreateProduct = async productData => {\n    try {\n      const response = await fetch(productEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(productData)\n      });\n      if (!response.ok) {\n        console.error(`HTTP error! Status: ${response.status}`);\n        return;\n      }\n      setIsProductCreated(true);\n      setTimeout(() => {\n        setIsProductCreated(false);\n        navigate('/');\n      }, 3000);\n    } catch (error) {\n      console.error('Error creating product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), isProductCreated && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Product created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProductForm, {\n      onSubmit: handleCreateProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateProduct, \"uxubBoPuWgs2FfqJKN7PbEwFAqA=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateProduct;\nexport default CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ProductForm","jsxDEV","_jsxDEV","endpoint","productEndpoint","categoriesEndpoint","CreateProduct","_s","isProductCreated","setIsProductCreated","navigate","handleCreateProduct","productData","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Master PC/Desktop/NEW/Crud/reactfront/src/components/CreateProduct.jsx"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const endpoint = 'http://localhost:8000/api';\r\n// const productEndpoint = `${endpoint}/product`;\r\n// const categoriesEndpoint = `${endpoint}/categories`; // Asegúrate de tener la ruta correcta para obtener las categorías\r\n\r\n// const CreateProduct = () => {\r\n//   const [description, setDescription] = useState('');\r\n//   const [price, setPrice] = useState(0);\r\n//   const [stock, setStock] = useState(0);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState('');\r\n//   const [isProductCreated, setIsProductCreated] = useState(false); // Nuevo estado\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchCategories = async () => {\r\n//       try {\r\n//         const response = await fetch(categoriesEndpoint);\r\n//         const data = await response.json();\r\n//         setCategories(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching categories:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const store = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const response = await fetch(productEndpoint, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ description, price, stock, category_id: selectedCategory }),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       console.error(`HTTP error! Status: ${response.status}`);\r\n//       return;\r\n//     }\r\n//     setIsProductCreated(true); // Establecemos el estado a true cuando el producto es creado\r\n//     setTimeout(() => {\r\n//       setIsProductCreated(false); // Después de 3 segundos, reseteamos el estado\r\n//       navigate('/');\r\n//     }, 3000);\r\n//     // navigate('/');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Create Product</h3>\r\n//       {/* {isProductCreated && <p>Product created successfully!</p>} */}\r\n//       {isProductCreated && (\r\n//       <p style={{ color: 'green' }}>Product created successfully!</p>\r\n//     )}\r\n//       <form onSubmit={store}>\r\n//         <div>\r\n//           <label>Description</label>\r\n//           <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required/>\r\n//         </div>\r\n//         <div>\r\n//           <label>Price</label>\r\n//           <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} required />\r\n//         </div>\r\n//         <div>\r\n//           <label>Stock</label>\r\n//           <input type=\"text\" value={stock} onChange={(e) => setStock(e.target.value)} required/>\r\n//         </div>\r\n//         <div>\r\n//           <label>Category</label>\r\n//           <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)} required>\r\n//             <option value=\"\">Select a category</option>\r\n//             {categories.map((category) => (\r\n//               <option key={category.id} value={category.id}>\r\n//                 {category.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n//         <button type=\"submit\">Create</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateProduct;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProductForm from './ProductForm';\r\n\r\nconst endpoint = 'http://localhost:8000/api';\r\nconst productEndpoint = `${endpoint}/product`;\r\nconst categoriesEndpoint = `${endpoint}/categories`;\r\n\r\nconst CreateProduct = () => {\r\n  const [isProductCreated, setIsProductCreated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateProduct = async (productData) => {\r\n    try {\r\n      const response = await fetch(productEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(productData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.error(`HTTP error! Status: ${response.status}`);\r\n        return;\r\n      }\r\n\r\n      setIsProductCreated(true);\r\n\r\n      setTimeout(() => {\r\n        setIsProductCreated(false);\r\n        navigate('/');\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Error creating product:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create Product</h3>\r\n      {isProductCreated && (\r\n        <p style={{ color: 'green' }}>Product created successfully!</p>\r\n      )}\r\n\r\n      {/* Utilizar ProductForm para la creación */}\r\n      <ProductForm onSubmit={handleCreateProduct} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAG,2BAA2B;AAC5C,MAAMC,eAAe,GAAI,GAAED,QAAS,UAAS;AAC7C,MAAME,kBAAkB,GAAI,GAAEF,QAAS,aAAY;AAEnD,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,mBAAmB,GAAG,MAAOC,WAAW,IAAK;IACjD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,eAAe,EAAE;QAC5CW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;QACvD;MACF;MAEAd,mBAAmB,CAAC,IAAI,CAAC;MAEzBe,UAAU,CAAC,MAAM;QACff,mBAAmB,CAAC,KAAK,CAAC;QAC1BC,QAAQ,CAAC,GAAG,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBrB,gBAAgB,iBACfN,OAAA;MAAG4B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAN,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/D,eAGD3B,OAAA,CAACF,WAAW;MAACgC,QAAQ,EAAErB;IAAoB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,aAAa;EAAA,QAEAP,WAAW;AAAA;AAAAkC,EAAA,GAFxB3B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}